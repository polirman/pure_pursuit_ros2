// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: navigation.proto

#include "navigation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace autonomous_proto {
PROTOBUF_CONSTEXPR Navigation_Position::Navigation_Position(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.lat_)*/nullptr
  , /*decltype(_impl_.lon_)*/nullptr
  , /*decltype(_impl_.alt_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Navigation_PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Navigation_PositionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Navigation_PositionDefaultTypeInternal() {}
  union {
    Navigation_Position _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Navigation_PositionDefaultTypeInternal _Navigation_Position_default_instance_;
PROTOBUF_CONSTEXPR Navigation_Orientation::Navigation_Orientation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.roll_)*/nullptr
  , /*decltype(_impl_.pitch_)*/nullptr
  , /*decltype(_impl_.yaw_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Navigation_OrientationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Navigation_OrientationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Navigation_OrientationDefaultTypeInternal() {}
  union {
    Navigation_Orientation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Navigation_OrientationDefaultTypeInternal _Navigation_Orientation_default_instance_;
PROTOBUF_CONSTEXPR Navigation_Velocity::Navigation_Velocity(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.e_)*/nullptr
  , /*decltype(_impl_.n_)*/nullptr
  , /*decltype(_impl_.u_)*/nullptr
  , /*decltype(_impl_.x_)*/nullptr
  , /*decltype(_impl_.y_)*/nullptr
  , /*decltype(_impl_.z_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Navigation_VelocityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Navigation_VelocityDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Navigation_VelocityDefaultTypeInternal() {}
  union {
    Navigation_Velocity _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Navigation_VelocityDefaultTypeInternal _Navigation_Velocity_default_instance_;
PROTOBUF_CONSTEXPR Navigation_AngularVelocity::Navigation_AngularVelocity(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.e_)*/nullptr
  , /*decltype(_impl_.n_)*/nullptr
  , /*decltype(_impl_.u_)*/nullptr
  , /*decltype(_impl_.x_)*/nullptr
  , /*decltype(_impl_.y_)*/nullptr
  , /*decltype(_impl_.z_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Navigation_AngularVelocityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Navigation_AngularVelocityDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Navigation_AngularVelocityDefaultTypeInternal() {}
  union {
    Navigation_AngularVelocity _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Navigation_AngularVelocityDefaultTypeInternal _Navigation_AngularVelocity_default_instance_;
PROTOBUF_CONSTEXPR Navigation_Acceleration::Navigation_Acceleration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.e_)*/nullptr
  , /*decltype(_impl_.n_)*/nullptr
  , /*decltype(_impl_.u_)*/nullptr
  , /*decltype(_impl_.x_)*/nullptr
  , /*decltype(_impl_.y_)*/nullptr
  , /*decltype(_impl_.z_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Navigation_AccelerationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Navigation_AccelerationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Navigation_AccelerationDefaultTypeInternal() {}
  union {
    Navigation_Acceleration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Navigation_AccelerationDefaultTypeInternal _Navigation_Acceleration_default_instance_;
PROTOBUF_CONSTEXPR Navigation_AngularAcceleration::Navigation_AngularAcceleration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.e_)*/nullptr
  , /*decltype(_impl_.n_)*/nullptr
  , /*decltype(_impl_.u_)*/nullptr
  , /*decltype(_impl_.x_)*/nullptr
  , /*decltype(_impl_.y_)*/nullptr
  , /*decltype(_impl_.z_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Navigation_AngularAccelerationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Navigation_AngularAccelerationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Navigation_AngularAccelerationDefaultTypeInternal() {}
  union {
    Navigation_AngularAcceleration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Navigation_AngularAccelerationDefaultTypeInternal _Navigation_AngularAcceleration_default_instance_;
PROTOBUF_CONSTEXPR Navigation::Navigation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_.orientation_)*/nullptr
  , /*decltype(_impl_.velocity_)*/nullptr
  , /*decltype(_impl_.angular_velocity_)*/nullptr
  , /*decltype(_impl_.acceleration_)*/nullptr
  , /*decltype(_impl_.angular_acceleration_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NavigationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NavigationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NavigationDefaultTypeInternal() {}
  union {
    Navigation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NavigationDefaultTypeInternal _Navigation_default_instance_;
}  // namespace autonomous_proto
static ::_pb::Metadata file_level_metadata_navigation_2eproto[7];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_navigation_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_navigation_2eproto = nullptr;

const uint32_t TableStruct_navigation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Position, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Position, _impl_.lat_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Position, _impl_.lon_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Position, _impl_.alt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Orientation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Orientation, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Orientation, _impl_.roll_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Orientation, _impl_.pitch_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Orientation, _impl_.yaw_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Velocity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Velocity, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Velocity, _impl_.e_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Velocity, _impl_.n_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Velocity, _impl_.u_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Velocity, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Velocity, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Velocity, _impl_.z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularVelocity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularVelocity, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularVelocity, _impl_.e_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularVelocity, _impl_.n_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularVelocity, _impl_.u_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularVelocity, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularVelocity, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularVelocity, _impl_.z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Acceleration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Acceleration, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Acceleration, _impl_.e_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Acceleration, _impl_.n_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Acceleration, _impl_.u_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Acceleration, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Acceleration, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_Acceleration, _impl_.z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularAcceleration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularAcceleration, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularAcceleration, _impl_.e_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularAcceleration, _impl_.n_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularAcceleration, _impl_.u_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularAcceleration, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularAcceleration, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation_AngularAcceleration, _impl_.z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation, _impl_.position_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation, _impl_.orientation_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation, _impl_.velocity_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation, _impl_.angular_velocity_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation, _impl_.acceleration_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::Navigation, _impl_.angular_acceleration_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::autonomous_proto::Navigation_Position)},
  { 10, -1, -1, sizeof(::autonomous_proto::Navigation_Orientation)},
  { 20, -1, -1, sizeof(::autonomous_proto::Navigation_Velocity)},
  { 33, -1, -1, sizeof(::autonomous_proto::Navigation_AngularVelocity)},
  { 46, -1, -1, sizeof(::autonomous_proto::Navigation_Acceleration)},
  { 59, -1, -1, sizeof(::autonomous_proto::Navigation_AngularAcceleration)},
  { 72, -1, -1, sizeof(::autonomous_proto::Navigation)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::autonomous_proto::_Navigation_Position_default_instance_._instance,
  &::autonomous_proto::_Navigation_Orientation_default_instance_._instance,
  &::autonomous_proto::_Navigation_Velocity_default_instance_._instance,
  &::autonomous_proto::_Navigation_AngularVelocity_default_instance_._instance,
  &::autonomous_proto::_Navigation_Acceleration_default_instance_._instance,
  &::autonomous_proto::_Navigation_AngularAcceleration_default_instance_._instance,
  &::autonomous_proto::_Navigation_default_instance_._instance,
};

const char descriptor_table_protodef_navigation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020navigation.proto\022\020autonomous_proto\032\036go"
  "ogle/protobuf/wrappers.proto\032\022message_in"
  "fo.proto\"\243\020\n\nNavigation\022-\n\006header\030\001 \001(\0132"
  "\035.autonomous_proto.MessageInfo\0227\n\010positi"
  "on\030\002 \001(\0132%.autonomous_proto.Navigation.P"
  "osition\022=\n\013orientation\030\003 \001(\0132(.autonomou"
  "s_proto.Navigation.Orientation\0227\n\010veloci"
  "ty\030\004 \001(\0132%.autonomous_proto.Navigation.V"
  "elocity\022F\n\020angular_velocity\030\005 \001(\0132,.auto"
  "nomous_proto.Navigation.AngularVelocity\022"
  "\?\n\014acceleration\030\006 \001(\0132).autonomous_proto"
  ".Navigation.Acceleration\022N\n\024angular_acce"
  "leration\030\007 \001(\01320.autonomous_proto.Naviga"
  "tion.AngularAcceleration\032\272\001\n\010Position\022-\n"
  "\006header\030\001 \001(\0132\035.autonomous_proto.Message"
  "Info\022)\n\003lat\030\002 \001(\0132\034.google.protobuf.Doub"
  "leValue\022)\n\003lon\030\003 \001(\0132\034.google.protobuf.D"
  "oubleValue\022)\n\003alt\030\004 \001(\0132\034.google.protobu"
  "f.DoubleValue\032\300\001\n\013Orientation\022-\n\006header\030"
  "\001 \001(\0132\035.autonomous_proto.MessageInfo\022*\n\004"
  "roll\030\002 \001(\0132\034.google.protobuf.DoubleValue"
  "\022+\n\005pitch\030\003 \001(\0132\034.google.protobuf.Double"
  "Value\022)\n\003yaw\030\004 \001(\0132\034.google.protobuf.Dou"
  "bleValue\032\257\002\n\010Velocity\022-\n\006header\030\001 \001(\0132\035."
  "autonomous_proto.MessageInfo\022\'\n\001e\030\002 \001(\0132"
  "\034.google.protobuf.DoubleValue\022\'\n\001n\030\003 \001(\013"
  "2\034.google.protobuf.DoubleValue\022\'\n\001u\030\004 \001("
  "\0132\034.google.protobuf.DoubleValue\022\'\n\001x\030\005 \001"
  "(\0132\034.google.protobuf.DoubleValue\022\'\n\001y\030\006 "
  "\001(\0132\034.google.protobuf.DoubleValue\022\'\n\001z\030\007"
  " \001(\0132\034.google.protobuf.DoubleValue\032\266\002\n\017A"
  "ngularVelocity\022-\n\006header\030\001 \001(\0132\035.autonom"
  "ous_proto.MessageInfo\022\'\n\001e\030\002 \001(\0132\034.googl"
  "e.protobuf.DoubleValue\022\'\n\001n\030\003 \001(\0132\034.goog"
  "le.protobuf.DoubleValue\022\'\n\001u\030\004 \001(\0132\034.goo"
  "gle.protobuf.DoubleValue\022\'\n\001x\030\005 \001(\0132\034.go"
  "ogle.protobuf.DoubleValue\022\'\n\001y\030\006 \001(\0132\034.g"
  "oogle.protobuf.DoubleValue\022\'\n\001z\030\007 \001(\0132\034."
  "google.protobuf.DoubleValue\032\263\002\n\014Accelera"
  "tion\022-\n\006header\030\001 \001(\0132\035.autonomous_proto."
  "MessageInfo\022\'\n\001e\030\002 \001(\0132\034.google.protobuf"
  ".DoubleValue\022\'\n\001n\030\003 \001(\0132\034.google.protobu"
  "f.DoubleValue\022\'\n\001u\030\004 \001(\0132\034.google.protob"
  "uf.DoubleValue\022\'\n\001x\030\005 \001(\0132\034.google.proto"
  "buf.DoubleValue\022\'\n\001y\030\006 \001(\0132\034.google.prot"
  "obuf.DoubleValue\022\'\n\001z\030\007 \001(\0132\034.google.pro"
  "tobuf.DoubleValue\032\272\002\n\023AngularAcceleratio"
  "n\022-\n\006header\030\001 \001(\0132\035.autonomous_proto.Mes"
  "sageInfo\022\'\n\001e\030\002 \001(\0132\034.google.protobuf.Do"
  "ubleValue\022\'\n\001n\030\003 \001(\0132\034.google.protobuf.D"
  "oubleValue\022\'\n\001u\030\004 \001(\0132\034.google.protobuf."
  "DoubleValue\022\'\n\001x\030\005 \001(\0132\034.google.protobuf"
  ".DoubleValue\022\'\n\001y\030\006 \001(\0132\034.google.protobu"
  "f.DoubleValue\022\'\n\001z\030\007 \001(\0132\034.google.protob"
  "uf.DoubleValueb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_navigation_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
  &::descriptor_table_message_5finfo_2eproto,
};
static ::_pbi::once_flag descriptor_table_navigation_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_navigation_2eproto = {
    false, false, 2182, descriptor_table_protodef_navigation_2eproto,
    "navigation.proto",
    &descriptor_table_navigation_2eproto_once, descriptor_table_navigation_2eproto_deps, 2, 7,
    schemas, file_default_instances, TableStruct_navigation_2eproto::offsets,
    file_level_metadata_navigation_2eproto, file_level_enum_descriptors_navigation_2eproto,
    file_level_service_descriptors_navigation_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_navigation_2eproto_getter() {
  return &descriptor_table_navigation_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_navigation_2eproto(&descriptor_table_navigation_2eproto);
namespace autonomous_proto {

// ===================================================================

class Navigation_Position::_Internal {
 public:
  static const ::autonomous_proto::MessageInfo& header(const Navigation_Position* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& lat(const Navigation_Position* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& lon(const Navigation_Position* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& alt(const Navigation_Position* msg);
};

const ::autonomous_proto::MessageInfo&
Navigation_Position::_Internal::header(const Navigation_Position* msg) {
  return *msg->_impl_.header_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Position::_Internal::lat(const Navigation_Position* msg) {
  return *msg->_impl_.lat_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Position::_Internal::lon(const Navigation_Position* msg) {
  return *msg->_impl_.lon_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Position::_Internal::alt(const Navigation_Position* msg) {
  return *msg->_impl_.alt_;
}
void Navigation_Position::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void Navigation_Position::clear_lat() {
  if (GetArenaForAllocation() == nullptr && _impl_.lat_ != nullptr) {
    delete _impl_.lat_;
  }
  _impl_.lat_ = nullptr;
}
void Navigation_Position::clear_lon() {
  if (GetArenaForAllocation() == nullptr && _impl_.lon_ != nullptr) {
    delete _impl_.lon_;
  }
  _impl_.lon_ = nullptr;
}
void Navigation_Position::clear_alt() {
  if (GetArenaForAllocation() == nullptr && _impl_.alt_ != nullptr) {
    delete _impl_.alt_;
  }
  _impl_.alt_ = nullptr;
}
Navigation_Position::Navigation_Position(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.Navigation.Position)
}
Navigation_Position::Navigation_Position(const Navigation_Position& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Navigation_Position* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.lat_){nullptr}
    , decltype(_impl_.lon_){nullptr}
    , decltype(_impl_.alt_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::autonomous_proto::MessageInfo(*from._impl_.header_);
  }
  if (from._internal_has_lat()) {
    _this->_impl_.lat_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.lat_);
  }
  if (from._internal_has_lon()) {
    _this->_impl_.lon_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.lon_);
  }
  if (from._internal_has_alt()) {
    _this->_impl_.alt_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.alt_);
  }
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.Navigation.Position)
}

inline void Navigation_Position::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.lat_){nullptr}
    , decltype(_impl_.lon_){nullptr}
    , decltype(_impl_.alt_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Navigation_Position::~Navigation_Position() {
  // @@protoc_insertion_point(destructor:autonomous_proto.Navigation.Position)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Navigation_Position::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.lat_;
  if (this != internal_default_instance()) delete _impl_.lon_;
  if (this != internal_default_instance()) delete _impl_.alt_;
}

void Navigation_Position::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Navigation_Position::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.Navigation.Position)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lat_ != nullptr) {
    delete _impl_.lat_;
  }
  _impl_.lat_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lon_ != nullptr) {
    delete _impl_.lon_;
  }
  _impl_.lon_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.alt_ != nullptr) {
    delete _impl_.alt_;
  }
  _impl_.alt_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Navigation_Position::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .autonomous_proto.MessageInfo header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue lat = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_lat(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue lon = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_lon(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue alt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_alt(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Navigation_Position::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.Navigation.Position)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue lat = 2;
  if (this->_internal_has_lat()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::lat(this),
        _Internal::lat(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue lon = 3;
  if (this->_internal_has_lon()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::lon(this),
        _Internal::lon(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue alt = 4;
  if (this->_internal_has_alt()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::alt(this),
        _Internal::alt(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.Navigation.Position)
  return target;
}

size_t Navigation_Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.Navigation.Position)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .google.protobuf.DoubleValue lat = 2;
  if (this->_internal_has_lat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lat_);
  }

  // .google.protobuf.DoubleValue lon = 3;
  if (this->_internal_has_lon()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lon_);
  }

  // .google.protobuf.DoubleValue alt = 4;
  if (this->_internal_has_alt()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.alt_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Navigation_Position::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Navigation_Position::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Navigation_Position::GetClassData() const { return &_class_data_; }


void Navigation_Position::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Navigation_Position*>(&to_msg);
  auto& from = static_cast<const Navigation_Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.Navigation.Position)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::autonomous_proto::MessageInfo::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_lat()) {
    _this->_internal_mutable_lat()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_lat());
  }
  if (from._internal_has_lon()) {
    _this->_internal_mutable_lon()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_lon());
  }
  if (from._internal_has_alt()) {
    _this->_internal_mutable_alt()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_alt());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Navigation_Position::CopyFrom(const Navigation_Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.Navigation.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Navigation_Position::IsInitialized() const {
  return true;
}

void Navigation_Position::InternalSwap(Navigation_Position* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Navigation_Position, _impl_.alt_)
      + sizeof(Navigation_Position::_impl_.alt_)
      - PROTOBUF_FIELD_OFFSET(Navigation_Position, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Navigation_Position::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_navigation_2eproto_getter, &descriptor_table_navigation_2eproto_once,
      file_level_metadata_navigation_2eproto[0]);
}

// ===================================================================

class Navigation_Orientation::_Internal {
 public:
  static const ::autonomous_proto::MessageInfo& header(const Navigation_Orientation* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& roll(const Navigation_Orientation* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& pitch(const Navigation_Orientation* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& yaw(const Navigation_Orientation* msg);
};

const ::autonomous_proto::MessageInfo&
Navigation_Orientation::_Internal::header(const Navigation_Orientation* msg) {
  return *msg->_impl_.header_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Orientation::_Internal::roll(const Navigation_Orientation* msg) {
  return *msg->_impl_.roll_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Orientation::_Internal::pitch(const Navigation_Orientation* msg) {
  return *msg->_impl_.pitch_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Orientation::_Internal::yaw(const Navigation_Orientation* msg) {
  return *msg->_impl_.yaw_;
}
void Navigation_Orientation::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void Navigation_Orientation::clear_roll() {
  if (GetArenaForAllocation() == nullptr && _impl_.roll_ != nullptr) {
    delete _impl_.roll_;
  }
  _impl_.roll_ = nullptr;
}
void Navigation_Orientation::clear_pitch() {
  if (GetArenaForAllocation() == nullptr && _impl_.pitch_ != nullptr) {
    delete _impl_.pitch_;
  }
  _impl_.pitch_ = nullptr;
}
void Navigation_Orientation::clear_yaw() {
  if (GetArenaForAllocation() == nullptr && _impl_.yaw_ != nullptr) {
    delete _impl_.yaw_;
  }
  _impl_.yaw_ = nullptr;
}
Navigation_Orientation::Navigation_Orientation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.Navigation.Orientation)
}
Navigation_Orientation::Navigation_Orientation(const Navigation_Orientation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Navigation_Orientation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.roll_){nullptr}
    , decltype(_impl_.pitch_){nullptr}
    , decltype(_impl_.yaw_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::autonomous_proto::MessageInfo(*from._impl_.header_);
  }
  if (from._internal_has_roll()) {
    _this->_impl_.roll_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.roll_);
  }
  if (from._internal_has_pitch()) {
    _this->_impl_.pitch_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.pitch_);
  }
  if (from._internal_has_yaw()) {
    _this->_impl_.yaw_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.yaw_);
  }
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.Navigation.Orientation)
}

inline void Navigation_Orientation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.roll_){nullptr}
    , decltype(_impl_.pitch_){nullptr}
    , decltype(_impl_.yaw_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Navigation_Orientation::~Navigation_Orientation() {
  // @@protoc_insertion_point(destructor:autonomous_proto.Navigation.Orientation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Navigation_Orientation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.roll_;
  if (this != internal_default_instance()) delete _impl_.pitch_;
  if (this != internal_default_instance()) delete _impl_.yaw_;
}

void Navigation_Orientation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Navigation_Orientation::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.Navigation.Orientation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.roll_ != nullptr) {
    delete _impl_.roll_;
  }
  _impl_.roll_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.pitch_ != nullptr) {
    delete _impl_.pitch_;
  }
  _impl_.pitch_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.yaw_ != nullptr) {
    delete _impl_.yaw_;
  }
  _impl_.yaw_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Navigation_Orientation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .autonomous_proto.MessageInfo header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue roll = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_roll(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue pitch = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_pitch(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue yaw = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_yaw(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Navigation_Orientation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.Navigation.Orientation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue roll = 2;
  if (this->_internal_has_roll()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::roll(this),
        _Internal::roll(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue pitch = 3;
  if (this->_internal_has_pitch()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::pitch(this),
        _Internal::pitch(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue yaw = 4;
  if (this->_internal_has_yaw()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::yaw(this),
        _Internal::yaw(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.Navigation.Orientation)
  return target;
}

size_t Navigation_Orientation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.Navigation.Orientation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .google.protobuf.DoubleValue roll = 2;
  if (this->_internal_has_roll()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.roll_);
  }

  // .google.protobuf.DoubleValue pitch = 3;
  if (this->_internal_has_pitch()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pitch_);
  }

  // .google.protobuf.DoubleValue yaw = 4;
  if (this->_internal_has_yaw()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.yaw_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Navigation_Orientation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Navigation_Orientation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Navigation_Orientation::GetClassData() const { return &_class_data_; }


void Navigation_Orientation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Navigation_Orientation*>(&to_msg);
  auto& from = static_cast<const Navigation_Orientation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.Navigation.Orientation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::autonomous_proto::MessageInfo::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_roll()) {
    _this->_internal_mutable_roll()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_roll());
  }
  if (from._internal_has_pitch()) {
    _this->_internal_mutable_pitch()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_pitch());
  }
  if (from._internal_has_yaw()) {
    _this->_internal_mutable_yaw()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_yaw());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Navigation_Orientation::CopyFrom(const Navigation_Orientation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.Navigation.Orientation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Navigation_Orientation::IsInitialized() const {
  return true;
}

void Navigation_Orientation::InternalSwap(Navigation_Orientation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Navigation_Orientation, _impl_.yaw_)
      + sizeof(Navigation_Orientation::_impl_.yaw_)
      - PROTOBUF_FIELD_OFFSET(Navigation_Orientation, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Navigation_Orientation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_navigation_2eproto_getter, &descriptor_table_navigation_2eproto_once,
      file_level_metadata_navigation_2eproto[1]);
}

// ===================================================================

class Navigation_Velocity::_Internal {
 public:
  static const ::autonomous_proto::MessageInfo& header(const Navigation_Velocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& e(const Navigation_Velocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& n(const Navigation_Velocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& u(const Navigation_Velocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& x(const Navigation_Velocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& y(const Navigation_Velocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& z(const Navigation_Velocity* msg);
};

const ::autonomous_proto::MessageInfo&
Navigation_Velocity::_Internal::header(const Navigation_Velocity* msg) {
  return *msg->_impl_.header_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Velocity::_Internal::e(const Navigation_Velocity* msg) {
  return *msg->_impl_.e_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Velocity::_Internal::n(const Navigation_Velocity* msg) {
  return *msg->_impl_.n_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Velocity::_Internal::u(const Navigation_Velocity* msg) {
  return *msg->_impl_.u_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Velocity::_Internal::x(const Navigation_Velocity* msg) {
  return *msg->_impl_.x_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Velocity::_Internal::y(const Navigation_Velocity* msg) {
  return *msg->_impl_.y_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Velocity::_Internal::z(const Navigation_Velocity* msg) {
  return *msg->_impl_.z_;
}
void Navigation_Velocity::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void Navigation_Velocity::clear_e() {
  if (GetArenaForAllocation() == nullptr && _impl_.e_ != nullptr) {
    delete _impl_.e_;
  }
  _impl_.e_ = nullptr;
}
void Navigation_Velocity::clear_n() {
  if (GetArenaForAllocation() == nullptr && _impl_.n_ != nullptr) {
    delete _impl_.n_;
  }
  _impl_.n_ = nullptr;
}
void Navigation_Velocity::clear_u() {
  if (GetArenaForAllocation() == nullptr && _impl_.u_ != nullptr) {
    delete _impl_.u_;
  }
  _impl_.u_ = nullptr;
}
void Navigation_Velocity::clear_x() {
  if (GetArenaForAllocation() == nullptr && _impl_.x_ != nullptr) {
    delete _impl_.x_;
  }
  _impl_.x_ = nullptr;
}
void Navigation_Velocity::clear_y() {
  if (GetArenaForAllocation() == nullptr && _impl_.y_ != nullptr) {
    delete _impl_.y_;
  }
  _impl_.y_ = nullptr;
}
void Navigation_Velocity::clear_z() {
  if (GetArenaForAllocation() == nullptr && _impl_.z_ != nullptr) {
    delete _impl_.z_;
  }
  _impl_.z_ = nullptr;
}
Navigation_Velocity::Navigation_Velocity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.Navigation.Velocity)
}
Navigation_Velocity::Navigation_Velocity(const Navigation_Velocity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Navigation_Velocity* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.e_){nullptr}
    , decltype(_impl_.n_){nullptr}
    , decltype(_impl_.u_){nullptr}
    , decltype(_impl_.x_){nullptr}
    , decltype(_impl_.y_){nullptr}
    , decltype(_impl_.z_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::autonomous_proto::MessageInfo(*from._impl_.header_);
  }
  if (from._internal_has_e()) {
    _this->_impl_.e_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.e_);
  }
  if (from._internal_has_n()) {
    _this->_impl_.n_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.n_);
  }
  if (from._internal_has_u()) {
    _this->_impl_.u_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.u_);
  }
  if (from._internal_has_x()) {
    _this->_impl_.x_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.x_);
  }
  if (from._internal_has_y()) {
    _this->_impl_.y_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.y_);
  }
  if (from._internal_has_z()) {
    _this->_impl_.z_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.z_);
  }
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.Navigation.Velocity)
}

inline void Navigation_Velocity::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.e_){nullptr}
    , decltype(_impl_.n_){nullptr}
    , decltype(_impl_.u_){nullptr}
    , decltype(_impl_.x_){nullptr}
    , decltype(_impl_.y_){nullptr}
    , decltype(_impl_.z_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Navigation_Velocity::~Navigation_Velocity() {
  // @@protoc_insertion_point(destructor:autonomous_proto.Navigation.Velocity)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Navigation_Velocity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.e_;
  if (this != internal_default_instance()) delete _impl_.n_;
  if (this != internal_default_instance()) delete _impl_.u_;
  if (this != internal_default_instance()) delete _impl_.x_;
  if (this != internal_default_instance()) delete _impl_.y_;
  if (this != internal_default_instance()) delete _impl_.z_;
}

void Navigation_Velocity::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Navigation_Velocity::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.Navigation.Velocity)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.e_ != nullptr) {
    delete _impl_.e_;
  }
  _impl_.e_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.n_ != nullptr) {
    delete _impl_.n_;
  }
  _impl_.n_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.u_ != nullptr) {
    delete _impl_.u_;
  }
  _impl_.u_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.x_ != nullptr) {
    delete _impl_.x_;
  }
  _impl_.x_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.y_ != nullptr) {
    delete _impl_.y_;
  }
  _impl_.y_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.z_ != nullptr) {
    delete _impl_.z_;
  }
  _impl_.z_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Navigation_Velocity::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .autonomous_proto.MessageInfo header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue e = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_e(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue n = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_n(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_u(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue x = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue y = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_y(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue z = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_z(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Navigation_Velocity::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.Navigation.Velocity)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue e = 2;
  if (this->_internal_has_e()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::e(this),
        _Internal::e(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue n = 3;
  if (this->_internal_has_n()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::n(this),
        _Internal::n(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue u = 4;
  if (this->_internal_has_u()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::u(this),
        _Internal::u(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue x = 5;
  if (this->_internal_has_x()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::x(this),
        _Internal::x(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue y = 6;
  if (this->_internal_has_y()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::y(this),
        _Internal::y(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue z = 7;
  if (this->_internal_has_z()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::z(this),
        _Internal::z(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.Navigation.Velocity)
  return target;
}

size_t Navigation_Velocity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.Navigation.Velocity)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .google.protobuf.DoubleValue e = 2;
  if (this->_internal_has_e()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.e_);
  }

  // .google.protobuf.DoubleValue n = 3;
  if (this->_internal_has_n()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.n_);
  }

  // .google.protobuf.DoubleValue u = 4;
  if (this->_internal_has_u()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.u_);
  }

  // .google.protobuf.DoubleValue x = 5;
  if (this->_internal_has_x()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.x_);
  }

  // .google.protobuf.DoubleValue y = 6;
  if (this->_internal_has_y()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.y_);
  }

  // .google.protobuf.DoubleValue z = 7;
  if (this->_internal_has_z()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.z_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Navigation_Velocity::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Navigation_Velocity::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Navigation_Velocity::GetClassData() const { return &_class_data_; }


void Navigation_Velocity::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Navigation_Velocity*>(&to_msg);
  auto& from = static_cast<const Navigation_Velocity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.Navigation.Velocity)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::autonomous_proto::MessageInfo::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_e()) {
    _this->_internal_mutable_e()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_e());
  }
  if (from._internal_has_n()) {
    _this->_internal_mutable_n()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_n());
  }
  if (from._internal_has_u()) {
    _this->_internal_mutable_u()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_u());
  }
  if (from._internal_has_x()) {
    _this->_internal_mutable_x()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_x());
  }
  if (from._internal_has_y()) {
    _this->_internal_mutable_y()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_y());
  }
  if (from._internal_has_z()) {
    _this->_internal_mutable_z()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Navigation_Velocity::CopyFrom(const Navigation_Velocity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.Navigation.Velocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Navigation_Velocity::IsInitialized() const {
  return true;
}

void Navigation_Velocity::InternalSwap(Navigation_Velocity* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Navigation_Velocity, _impl_.z_)
      + sizeof(Navigation_Velocity::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Navigation_Velocity, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Navigation_Velocity::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_navigation_2eproto_getter, &descriptor_table_navigation_2eproto_once,
      file_level_metadata_navigation_2eproto[2]);
}

// ===================================================================

class Navigation_AngularVelocity::_Internal {
 public:
  static const ::autonomous_proto::MessageInfo& header(const Navigation_AngularVelocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& e(const Navigation_AngularVelocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& n(const Navigation_AngularVelocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& u(const Navigation_AngularVelocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& x(const Navigation_AngularVelocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& y(const Navigation_AngularVelocity* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& z(const Navigation_AngularVelocity* msg);
};

const ::autonomous_proto::MessageInfo&
Navigation_AngularVelocity::_Internal::header(const Navigation_AngularVelocity* msg) {
  return *msg->_impl_.header_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularVelocity::_Internal::e(const Navigation_AngularVelocity* msg) {
  return *msg->_impl_.e_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularVelocity::_Internal::n(const Navigation_AngularVelocity* msg) {
  return *msg->_impl_.n_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularVelocity::_Internal::u(const Navigation_AngularVelocity* msg) {
  return *msg->_impl_.u_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularVelocity::_Internal::x(const Navigation_AngularVelocity* msg) {
  return *msg->_impl_.x_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularVelocity::_Internal::y(const Navigation_AngularVelocity* msg) {
  return *msg->_impl_.y_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularVelocity::_Internal::z(const Navigation_AngularVelocity* msg) {
  return *msg->_impl_.z_;
}
void Navigation_AngularVelocity::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void Navigation_AngularVelocity::clear_e() {
  if (GetArenaForAllocation() == nullptr && _impl_.e_ != nullptr) {
    delete _impl_.e_;
  }
  _impl_.e_ = nullptr;
}
void Navigation_AngularVelocity::clear_n() {
  if (GetArenaForAllocation() == nullptr && _impl_.n_ != nullptr) {
    delete _impl_.n_;
  }
  _impl_.n_ = nullptr;
}
void Navigation_AngularVelocity::clear_u() {
  if (GetArenaForAllocation() == nullptr && _impl_.u_ != nullptr) {
    delete _impl_.u_;
  }
  _impl_.u_ = nullptr;
}
void Navigation_AngularVelocity::clear_x() {
  if (GetArenaForAllocation() == nullptr && _impl_.x_ != nullptr) {
    delete _impl_.x_;
  }
  _impl_.x_ = nullptr;
}
void Navigation_AngularVelocity::clear_y() {
  if (GetArenaForAllocation() == nullptr && _impl_.y_ != nullptr) {
    delete _impl_.y_;
  }
  _impl_.y_ = nullptr;
}
void Navigation_AngularVelocity::clear_z() {
  if (GetArenaForAllocation() == nullptr && _impl_.z_ != nullptr) {
    delete _impl_.z_;
  }
  _impl_.z_ = nullptr;
}
Navigation_AngularVelocity::Navigation_AngularVelocity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.Navigation.AngularVelocity)
}
Navigation_AngularVelocity::Navigation_AngularVelocity(const Navigation_AngularVelocity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Navigation_AngularVelocity* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.e_){nullptr}
    , decltype(_impl_.n_){nullptr}
    , decltype(_impl_.u_){nullptr}
    , decltype(_impl_.x_){nullptr}
    , decltype(_impl_.y_){nullptr}
    , decltype(_impl_.z_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::autonomous_proto::MessageInfo(*from._impl_.header_);
  }
  if (from._internal_has_e()) {
    _this->_impl_.e_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.e_);
  }
  if (from._internal_has_n()) {
    _this->_impl_.n_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.n_);
  }
  if (from._internal_has_u()) {
    _this->_impl_.u_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.u_);
  }
  if (from._internal_has_x()) {
    _this->_impl_.x_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.x_);
  }
  if (from._internal_has_y()) {
    _this->_impl_.y_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.y_);
  }
  if (from._internal_has_z()) {
    _this->_impl_.z_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.z_);
  }
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.Navigation.AngularVelocity)
}

inline void Navigation_AngularVelocity::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.e_){nullptr}
    , decltype(_impl_.n_){nullptr}
    , decltype(_impl_.u_){nullptr}
    , decltype(_impl_.x_){nullptr}
    , decltype(_impl_.y_){nullptr}
    , decltype(_impl_.z_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Navigation_AngularVelocity::~Navigation_AngularVelocity() {
  // @@protoc_insertion_point(destructor:autonomous_proto.Navigation.AngularVelocity)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Navigation_AngularVelocity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.e_;
  if (this != internal_default_instance()) delete _impl_.n_;
  if (this != internal_default_instance()) delete _impl_.u_;
  if (this != internal_default_instance()) delete _impl_.x_;
  if (this != internal_default_instance()) delete _impl_.y_;
  if (this != internal_default_instance()) delete _impl_.z_;
}

void Navigation_AngularVelocity::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Navigation_AngularVelocity::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.Navigation.AngularVelocity)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.e_ != nullptr) {
    delete _impl_.e_;
  }
  _impl_.e_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.n_ != nullptr) {
    delete _impl_.n_;
  }
  _impl_.n_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.u_ != nullptr) {
    delete _impl_.u_;
  }
  _impl_.u_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.x_ != nullptr) {
    delete _impl_.x_;
  }
  _impl_.x_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.y_ != nullptr) {
    delete _impl_.y_;
  }
  _impl_.y_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.z_ != nullptr) {
    delete _impl_.z_;
  }
  _impl_.z_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Navigation_AngularVelocity::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .autonomous_proto.MessageInfo header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue e = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_e(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue n = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_n(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_u(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue x = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue y = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_y(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue z = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_z(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Navigation_AngularVelocity::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.Navigation.AngularVelocity)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue e = 2;
  if (this->_internal_has_e()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::e(this),
        _Internal::e(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue n = 3;
  if (this->_internal_has_n()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::n(this),
        _Internal::n(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue u = 4;
  if (this->_internal_has_u()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::u(this),
        _Internal::u(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue x = 5;
  if (this->_internal_has_x()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::x(this),
        _Internal::x(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue y = 6;
  if (this->_internal_has_y()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::y(this),
        _Internal::y(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue z = 7;
  if (this->_internal_has_z()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::z(this),
        _Internal::z(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.Navigation.AngularVelocity)
  return target;
}

size_t Navigation_AngularVelocity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.Navigation.AngularVelocity)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .google.protobuf.DoubleValue e = 2;
  if (this->_internal_has_e()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.e_);
  }

  // .google.protobuf.DoubleValue n = 3;
  if (this->_internal_has_n()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.n_);
  }

  // .google.protobuf.DoubleValue u = 4;
  if (this->_internal_has_u()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.u_);
  }

  // .google.protobuf.DoubleValue x = 5;
  if (this->_internal_has_x()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.x_);
  }

  // .google.protobuf.DoubleValue y = 6;
  if (this->_internal_has_y()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.y_);
  }

  // .google.protobuf.DoubleValue z = 7;
  if (this->_internal_has_z()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.z_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Navigation_AngularVelocity::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Navigation_AngularVelocity::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Navigation_AngularVelocity::GetClassData() const { return &_class_data_; }


void Navigation_AngularVelocity::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Navigation_AngularVelocity*>(&to_msg);
  auto& from = static_cast<const Navigation_AngularVelocity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.Navigation.AngularVelocity)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::autonomous_proto::MessageInfo::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_e()) {
    _this->_internal_mutable_e()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_e());
  }
  if (from._internal_has_n()) {
    _this->_internal_mutable_n()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_n());
  }
  if (from._internal_has_u()) {
    _this->_internal_mutable_u()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_u());
  }
  if (from._internal_has_x()) {
    _this->_internal_mutable_x()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_x());
  }
  if (from._internal_has_y()) {
    _this->_internal_mutable_y()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_y());
  }
  if (from._internal_has_z()) {
    _this->_internal_mutable_z()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Navigation_AngularVelocity::CopyFrom(const Navigation_AngularVelocity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.Navigation.AngularVelocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Navigation_AngularVelocity::IsInitialized() const {
  return true;
}

void Navigation_AngularVelocity::InternalSwap(Navigation_AngularVelocity* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Navigation_AngularVelocity, _impl_.z_)
      + sizeof(Navigation_AngularVelocity::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Navigation_AngularVelocity, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Navigation_AngularVelocity::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_navigation_2eproto_getter, &descriptor_table_navigation_2eproto_once,
      file_level_metadata_navigation_2eproto[3]);
}

// ===================================================================

class Navigation_Acceleration::_Internal {
 public:
  static const ::autonomous_proto::MessageInfo& header(const Navigation_Acceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& e(const Navigation_Acceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& n(const Navigation_Acceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& u(const Navigation_Acceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& x(const Navigation_Acceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& y(const Navigation_Acceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& z(const Navigation_Acceleration* msg);
};

const ::autonomous_proto::MessageInfo&
Navigation_Acceleration::_Internal::header(const Navigation_Acceleration* msg) {
  return *msg->_impl_.header_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Acceleration::_Internal::e(const Navigation_Acceleration* msg) {
  return *msg->_impl_.e_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Acceleration::_Internal::n(const Navigation_Acceleration* msg) {
  return *msg->_impl_.n_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Acceleration::_Internal::u(const Navigation_Acceleration* msg) {
  return *msg->_impl_.u_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Acceleration::_Internal::x(const Navigation_Acceleration* msg) {
  return *msg->_impl_.x_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Acceleration::_Internal::y(const Navigation_Acceleration* msg) {
  return *msg->_impl_.y_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_Acceleration::_Internal::z(const Navigation_Acceleration* msg) {
  return *msg->_impl_.z_;
}
void Navigation_Acceleration::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void Navigation_Acceleration::clear_e() {
  if (GetArenaForAllocation() == nullptr && _impl_.e_ != nullptr) {
    delete _impl_.e_;
  }
  _impl_.e_ = nullptr;
}
void Navigation_Acceleration::clear_n() {
  if (GetArenaForAllocation() == nullptr && _impl_.n_ != nullptr) {
    delete _impl_.n_;
  }
  _impl_.n_ = nullptr;
}
void Navigation_Acceleration::clear_u() {
  if (GetArenaForAllocation() == nullptr && _impl_.u_ != nullptr) {
    delete _impl_.u_;
  }
  _impl_.u_ = nullptr;
}
void Navigation_Acceleration::clear_x() {
  if (GetArenaForAllocation() == nullptr && _impl_.x_ != nullptr) {
    delete _impl_.x_;
  }
  _impl_.x_ = nullptr;
}
void Navigation_Acceleration::clear_y() {
  if (GetArenaForAllocation() == nullptr && _impl_.y_ != nullptr) {
    delete _impl_.y_;
  }
  _impl_.y_ = nullptr;
}
void Navigation_Acceleration::clear_z() {
  if (GetArenaForAllocation() == nullptr && _impl_.z_ != nullptr) {
    delete _impl_.z_;
  }
  _impl_.z_ = nullptr;
}
Navigation_Acceleration::Navigation_Acceleration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.Navigation.Acceleration)
}
Navigation_Acceleration::Navigation_Acceleration(const Navigation_Acceleration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Navigation_Acceleration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.e_){nullptr}
    , decltype(_impl_.n_){nullptr}
    , decltype(_impl_.u_){nullptr}
    , decltype(_impl_.x_){nullptr}
    , decltype(_impl_.y_){nullptr}
    , decltype(_impl_.z_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::autonomous_proto::MessageInfo(*from._impl_.header_);
  }
  if (from._internal_has_e()) {
    _this->_impl_.e_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.e_);
  }
  if (from._internal_has_n()) {
    _this->_impl_.n_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.n_);
  }
  if (from._internal_has_u()) {
    _this->_impl_.u_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.u_);
  }
  if (from._internal_has_x()) {
    _this->_impl_.x_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.x_);
  }
  if (from._internal_has_y()) {
    _this->_impl_.y_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.y_);
  }
  if (from._internal_has_z()) {
    _this->_impl_.z_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.z_);
  }
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.Navigation.Acceleration)
}

inline void Navigation_Acceleration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.e_){nullptr}
    , decltype(_impl_.n_){nullptr}
    , decltype(_impl_.u_){nullptr}
    , decltype(_impl_.x_){nullptr}
    , decltype(_impl_.y_){nullptr}
    , decltype(_impl_.z_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Navigation_Acceleration::~Navigation_Acceleration() {
  // @@protoc_insertion_point(destructor:autonomous_proto.Navigation.Acceleration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Navigation_Acceleration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.e_;
  if (this != internal_default_instance()) delete _impl_.n_;
  if (this != internal_default_instance()) delete _impl_.u_;
  if (this != internal_default_instance()) delete _impl_.x_;
  if (this != internal_default_instance()) delete _impl_.y_;
  if (this != internal_default_instance()) delete _impl_.z_;
}

void Navigation_Acceleration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Navigation_Acceleration::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.Navigation.Acceleration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.e_ != nullptr) {
    delete _impl_.e_;
  }
  _impl_.e_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.n_ != nullptr) {
    delete _impl_.n_;
  }
  _impl_.n_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.u_ != nullptr) {
    delete _impl_.u_;
  }
  _impl_.u_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.x_ != nullptr) {
    delete _impl_.x_;
  }
  _impl_.x_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.y_ != nullptr) {
    delete _impl_.y_;
  }
  _impl_.y_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.z_ != nullptr) {
    delete _impl_.z_;
  }
  _impl_.z_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Navigation_Acceleration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .autonomous_proto.MessageInfo header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue e = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_e(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue n = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_n(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_u(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue x = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue y = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_y(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue z = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_z(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Navigation_Acceleration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.Navigation.Acceleration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue e = 2;
  if (this->_internal_has_e()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::e(this),
        _Internal::e(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue n = 3;
  if (this->_internal_has_n()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::n(this),
        _Internal::n(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue u = 4;
  if (this->_internal_has_u()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::u(this),
        _Internal::u(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue x = 5;
  if (this->_internal_has_x()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::x(this),
        _Internal::x(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue y = 6;
  if (this->_internal_has_y()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::y(this),
        _Internal::y(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue z = 7;
  if (this->_internal_has_z()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::z(this),
        _Internal::z(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.Navigation.Acceleration)
  return target;
}

size_t Navigation_Acceleration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.Navigation.Acceleration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .google.protobuf.DoubleValue e = 2;
  if (this->_internal_has_e()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.e_);
  }

  // .google.protobuf.DoubleValue n = 3;
  if (this->_internal_has_n()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.n_);
  }

  // .google.protobuf.DoubleValue u = 4;
  if (this->_internal_has_u()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.u_);
  }

  // .google.protobuf.DoubleValue x = 5;
  if (this->_internal_has_x()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.x_);
  }

  // .google.protobuf.DoubleValue y = 6;
  if (this->_internal_has_y()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.y_);
  }

  // .google.protobuf.DoubleValue z = 7;
  if (this->_internal_has_z()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.z_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Navigation_Acceleration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Navigation_Acceleration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Navigation_Acceleration::GetClassData() const { return &_class_data_; }


void Navigation_Acceleration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Navigation_Acceleration*>(&to_msg);
  auto& from = static_cast<const Navigation_Acceleration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.Navigation.Acceleration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::autonomous_proto::MessageInfo::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_e()) {
    _this->_internal_mutable_e()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_e());
  }
  if (from._internal_has_n()) {
    _this->_internal_mutable_n()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_n());
  }
  if (from._internal_has_u()) {
    _this->_internal_mutable_u()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_u());
  }
  if (from._internal_has_x()) {
    _this->_internal_mutable_x()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_x());
  }
  if (from._internal_has_y()) {
    _this->_internal_mutable_y()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_y());
  }
  if (from._internal_has_z()) {
    _this->_internal_mutable_z()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Navigation_Acceleration::CopyFrom(const Navigation_Acceleration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.Navigation.Acceleration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Navigation_Acceleration::IsInitialized() const {
  return true;
}

void Navigation_Acceleration::InternalSwap(Navigation_Acceleration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Navigation_Acceleration, _impl_.z_)
      + sizeof(Navigation_Acceleration::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Navigation_Acceleration, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Navigation_Acceleration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_navigation_2eproto_getter, &descriptor_table_navigation_2eproto_once,
      file_level_metadata_navigation_2eproto[4]);
}

// ===================================================================

class Navigation_AngularAcceleration::_Internal {
 public:
  static const ::autonomous_proto::MessageInfo& header(const Navigation_AngularAcceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& e(const Navigation_AngularAcceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& n(const Navigation_AngularAcceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& u(const Navigation_AngularAcceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& x(const Navigation_AngularAcceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& y(const Navigation_AngularAcceleration* msg);
  static const ::PROTOBUF_NAMESPACE_ID::DoubleValue& z(const Navigation_AngularAcceleration* msg);
};

const ::autonomous_proto::MessageInfo&
Navigation_AngularAcceleration::_Internal::header(const Navigation_AngularAcceleration* msg) {
  return *msg->_impl_.header_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularAcceleration::_Internal::e(const Navigation_AngularAcceleration* msg) {
  return *msg->_impl_.e_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularAcceleration::_Internal::n(const Navigation_AngularAcceleration* msg) {
  return *msg->_impl_.n_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularAcceleration::_Internal::u(const Navigation_AngularAcceleration* msg) {
  return *msg->_impl_.u_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularAcceleration::_Internal::x(const Navigation_AngularAcceleration* msg) {
  return *msg->_impl_.x_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularAcceleration::_Internal::y(const Navigation_AngularAcceleration* msg) {
  return *msg->_impl_.y_;
}
const ::PROTOBUF_NAMESPACE_ID::DoubleValue&
Navigation_AngularAcceleration::_Internal::z(const Navigation_AngularAcceleration* msg) {
  return *msg->_impl_.z_;
}
void Navigation_AngularAcceleration::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void Navigation_AngularAcceleration::clear_e() {
  if (GetArenaForAllocation() == nullptr && _impl_.e_ != nullptr) {
    delete _impl_.e_;
  }
  _impl_.e_ = nullptr;
}
void Navigation_AngularAcceleration::clear_n() {
  if (GetArenaForAllocation() == nullptr && _impl_.n_ != nullptr) {
    delete _impl_.n_;
  }
  _impl_.n_ = nullptr;
}
void Navigation_AngularAcceleration::clear_u() {
  if (GetArenaForAllocation() == nullptr && _impl_.u_ != nullptr) {
    delete _impl_.u_;
  }
  _impl_.u_ = nullptr;
}
void Navigation_AngularAcceleration::clear_x() {
  if (GetArenaForAllocation() == nullptr && _impl_.x_ != nullptr) {
    delete _impl_.x_;
  }
  _impl_.x_ = nullptr;
}
void Navigation_AngularAcceleration::clear_y() {
  if (GetArenaForAllocation() == nullptr && _impl_.y_ != nullptr) {
    delete _impl_.y_;
  }
  _impl_.y_ = nullptr;
}
void Navigation_AngularAcceleration::clear_z() {
  if (GetArenaForAllocation() == nullptr && _impl_.z_ != nullptr) {
    delete _impl_.z_;
  }
  _impl_.z_ = nullptr;
}
Navigation_AngularAcceleration::Navigation_AngularAcceleration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.Navigation.AngularAcceleration)
}
Navigation_AngularAcceleration::Navigation_AngularAcceleration(const Navigation_AngularAcceleration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Navigation_AngularAcceleration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.e_){nullptr}
    , decltype(_impl_.n_){nullptr}
    , decltype(_impl_.u_){nullptr}
    , decltype(_impl_.x_){nullptr}
    , decltype(_impl_.y_){nullptr}
    , decltype(_impl_.z_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::autonomous_proto::MessageInfo(*from._impl_.header_);
  }
  if (from._internal_has_e()) {
    _this->_impl_.e_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.e_);
  }
  if (from._internal_has_n()) {
    _this->_impl_.n_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.n_);
  }
  if (from._internal_has_u()) {
    _this->_impl_.u_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.u_);
  }
  if (from._internal_has_x()) {
    _this->_impl_.x_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.x_);
  }
  if (from._internal_has_y()) {
    _this->_impl_.y_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.y_);
  }
  if (from._internal_has_z()) {
    _this->_impl_.z_ = new ::PROTOBUF_NAMESPACE_ID::DoubleValue(*from._impl_.z_);
  }
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.Navigation.AngularAcceleration)
}

inline void Navigation_AngularAcceleration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.e_){nullptr}
    , decltype(_impl_.n_){nullptr}
    , decltype(_impl_.u_){nullptr}
    , decltype(_impl_.x_){nullptr}
    , decltype(_impl_.y_){nullptr}
    , decltype(_impl_.z_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Navigation_AngularAcceleration::~Navigation_AngularAcceleration() {
  // @@protoc_insertion_point(destructor:autonomous_proto.Navigation.AngularAcceleration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Navigation_AngularAcceleration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.e_;
  if (this != internal_default_instance()) delete _impl_.n_;
  if (this != internal_default_instance()) delete _impl_.u_;
  if (this != internal_default_instance()) delete _impl_.x_;
  if (this != internal_default_instance()) delete _impl_.y_;
  if (this != internal_default_instance()) delete _impl_.z_;
}

void Navigation_AngularAcceleration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Navigation_AngularAcceleration::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.Navigation.AngularAcceleration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.e_ != nullptr) {
    delete _impl_.e_;
  }
  _impl_.e_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.n_ != nullptr) {
    delete _impl_.n_;
  }
  _impl_.n_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.u_ != nullptr) {
    delete _impl_.u_;
  }
  _impl_.u_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.x_ != nullptr) {
    delete _impl_.x_;
  }
  _impl_.x_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.y_ != nullptr) {
    delete _impl_.y_;
  }
  _impl_.y_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.z_ != nullptr) {
    delete _impl_.z_;
  }
  _impl_.z_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Navigation_AngularAcceleration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .autonomous_proto.MessageInfo header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue e = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_e(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue n = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_n(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue u = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_u(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue x = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue y = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_y(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue z = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_z(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Navigation_AngularAcceleration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.Navigation.AngularAcceleration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue e = 2;
  if (this->_internal_has_e()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::e(this),
        _Internal::e(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue n = 3;
  if (this->_internal_has_n()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::n(this),
        _Internal::n(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue u = 4;
  if (this->_internal_has_u()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::u(this),
        _Internal::u(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue x = 5;
  if (this->_internal_has_x()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::x(this),
        _Internal::x(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue y = 6;
  if (this->_internal_has_y()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::y(this),
        _Internal::y(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.DoubleValue z = 7;
  if (this->_internal_has_z()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::z(this),
        _Internal::z(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.Navigation.AngularAcceleration)
  return target;
}

size_t Navigation_AngularAcceleration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.Navigation.AngularAcceleration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .google.protobuf.DoubleValue e = 2;
  if (this->_internal_has_e()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.e_);
  }

  // .google.protobuf.DoubleValue n = 3;
  if (this->_internal_has_n()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.n_);
  }

  // .google.protobuf.DoubleValue u = 4;
  if (this->_internal_has_u()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.u_);
  }

  // .google.protobuf.DoubleValue x = 5;
  if (this->_internal_has_x()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.x_);
  }

  // .google.protobuf.DoubleValue y = 6;
  if (this->_internal_has_y()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.y_);
  }

  // .google.protobuf.DoubleValue z = 7;
  if (this->_internal_has_z()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.z_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Navigation_AngularAcceleration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Navigation_AngularAcceleration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Navigation_AngularAcceleration::GetClassData() const { return &_class_data_; }


void Navigation_AngularAcceleration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Navigation_AngularAcceleration*>(&to_msg);
  auto& from = static_cast<const Navigation_AngularAcceleration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.Navigation.AngularAcceleration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::autonomous_proto::MessageInfo::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_e()) {
    _this->_internal_mutable_e()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_e());
  }
  if (from._internal_has_n()) {
    _this->_internal_mutable_n()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_n());
  }
  if (from._internal_has_u()) {
    _this->_internal_mutable_u()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_u());
  }
  if (from._internal_has_x()) {
    _this->_internal_mutable_x()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_x());
  }
  if (from._internal_has_y()) {
    _this->_internal_mutable_y()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_y());
  }
  if (from._internal_has_z()) {
    _this->_internal_mutable_z()->::PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(
        from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Navigation_AngularAcceleration::CopyFrom(const Navigation_AngularAcceleration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.Navigation.AngularAcceleration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Navigation_AngularAcceleration::IsInitialized() const {
  return true;
}

void Navigation_AngularAcceleration::InternalSwap(Navigation_AngularAcceleration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Navigation_AngularAcceleration, _impl_.z_)
      + sizeof(Navigation_AngularAcceleration::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Navigation_AngularAcceleration, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Navigation_AngularAcceleration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_navigation_2eproto_getter, &descriptor_table_navigation_2eproto_once,
      file_level_metadata_navigation_2eproto[5]);
}

// ===================================================================

class Navigation::_Internal {
 public:
  static const ::autonomous_proto::MessageInfo& header(const Navigation* msg);
  static const ::autonomous_proto::Navigation_Position& position(const Navigation* msg);
  static const ::autonomous_proto::Navigation_Orientation& orientation(const Navigation* msg);
  static const ::autonomous_proto::Navigation_Velocity& velocity(const Navigation* msg);
  static const ::autonomous_proto::Navigation_AngularVelocity& angular_velocity(const Navigation* msg);
  static const ::autonomous_proto::Navigation_Acceleration& acceleration(const Navigation* msg);
  static const ::autonomous_proto::Navigation_AngularAcceleration& angular_acceleration(const Navigation* msg);
};

const ::autonomous_proto::MessageInfo&
Navigation::_Internal::header(const Navigation* msg) {
  return *msg->_impl_.header_;
}
const ::autonomous_proto::Navigation_Position&
Navigation::_Internal::position(const Navigation* msg) {
  return *msg->_impl_.position_;
}
const ::autonomous_proto::Navigation_Orientation&
Navigation::_Internal::orientation(const Navigation* msg) {
  return *msg->_impl_.orientation_;
}
const ::autonomous_proto::Navigation_Velocity&
Navigation::_Internal::velocity(const Navigation* msg) {
  return *msg->_impl_.velocity_;
}
const ::autonomous_proto::Navigation_AngularVelocity&
Navigation::_Internal::angular_velocity(const Navigation* msg) {
  return *msg->_impl_.angular_velocity_;
}
const ::autonomous_proto::Navigation_Acceleration&
Navigation::_Internal::acceleration(const Navigation* msg) {
  return *msg->_impl_.acceleration_;
}
const ::autonomous_proto::Navigation_AngularAcceleration&
Navigation::_Internal::angular_acceleration(const Navigation* msg) {
  return *msg->_impl_.angular_acceleration_;
}
void Navigation::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
Navigation::Navigation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.Navigation)
}
Navigation::Navigation(const Navigation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Navigation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.velocity_){nullptr}
    , decltype(_impl_.angular_velocity_){nullptr}
    , decltype(_impl_.acceleration_){nullptr}
    , decltype(_impl_.angular_acceleration_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::autonomous_proto::MessageInfo(*from._impl_.header_);
  }
  if (from._internal_has_position()) {
    _this->_impl_.position_ = new ::autonomous_proto::Navigation_Position(*from._impl_.position_);
  }
  if (from._internal_has_orientation()) {
    _this->_impl_.orientation_ = new ::autonomous_proto::Navigation_Orientation(*from._impl_.orientation_);
  }
  if (from._internal_has_velocity()) {
    _this->_impl_.velocity_ = new ::autonomous_proto::Navigation_Velocity(*from._impl_.velocity_);
  }
  if (from._internal_has_angular_velocity()) {
    _this->_impl_.angular_velocity_ = new ::autonomous_proto::Navigation_AngularVelocity(*from._impl_.angular_velocity_);
  }
  if (from._internal_has_acceleration()) {
    _this->_impl_.acceleration_ = new ::autonomous_proto::Navigation_Acceleration(*from._impl_.acceleration_);
  }
  if (from._internal_has_angular_acceleration()) {
    _this->_impl_.angular_acceleration_ = new ::autonomous_proto::Navigation_AngularAcceleration(*from._impl_.angular_acceleration_);
  }
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.Navigation)
}

inline void Navigation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.velocity_){nullptr}
    , decltype(_impl_.angular_velocity_){nullptr}
    , decltype(_impl_.acceleration_){nullptr}
    , decltype(_impl_.angular_acceleration_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Navigation::~Navigation() {
  // @@protoc_insertion_point(destructor:autonomous_proto.Navigation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Navigation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.position_;
  if (this != internal_default_instance()) delete _impl_.orientation_;
  if (this != internal_default_instance()) delete _impl_.velocity_;
  if (this != internal_default_instance()) delete _impl_.angular_velocity_;
  if (this != internal_default_instance()) delete _impl_.acceleration_;
  if (this != internal_default_instance()) delete _impl_.angular_acceleration_;
}

void Navigation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Navigation::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.Navigation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.position_ != nullptr) {
    delete _impl_.position_;
  }
  _impl_.position_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.orientation_ != nullptr) {
    delete _impl_.orientation_;
  }
  _impl_.orientation_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.velocity_ != nullptr) {
    delete _impl_.velocity_;
  }
  _impl_.velocity_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.angular_velocity_ != nullptr) {
    delete _impl_.angular_velocity_;
  }
  _impl_.angular_velocity_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.acceleration_ != nullptr) {
    delete _impl_.acceleration_;
  }
  _impl_.acceleration_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.angular_acceleration_ != nullptr) {
    delete _impl_.angular_acceleration_;
  }
  _impl_.angular_acceleration_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Navigation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .autonomous_proto.MessageInfo header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .autonomous_proto.Navigation.Position position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .autonomous_proto.Navigation.Orientation orientation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .autonomous_proto.Navigation.Velocity velocity = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_velocity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .autonomous_proto.Navigation.AngularVelocity angular_velocity = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_angular_velocity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .autonomous_proto.Navigation.Acceleration acceleration = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_acceleration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .autonomous_proto.Navigation.AngularAcceleration angular_acceleration = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_angular_acceleration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Navigation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.Navigation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .autonomous_proto.Navigation.Position position = 2;
  if (this->_internal_has_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // .autonomous_proto.Navigation.Orientation orientation = 3;
  if (this->_internal_has_orientation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::orientation(this),
        _Internal::orientation(this).GetCachedSize(), target, stream);
  }

  // .autonomous_proto.Navigation.Velocity velocity = 4;
  if (this->_internal_has_velocity()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::velocity(this),
        _Internal::velocity(this).GetCachedSize(), target, stream);
  }

  // .autonomous_proto.Navigation.AngularVelocity angular_velocity = 5;
  if (this->_internal_has_angular_velocity()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::angular_velocity(this),
        _Internal::angular_velocity(this).GetCachedSize(), target, stream);
  }

  // .autonomous_proto.Navigation.Acceleration acceleration = 6;
  if (this->_internal_has_acceleration()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::acceleration(this),
        _Internal::acceleration(this).GetCachedSize(), target, stream);
  }

  // .autonomous_proto.Navigation.AngularAcceleration angular_acceleration = 7;
  if (this->_internal_has_angular_acceleration()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::angular_acceleration(this),
        _Internal::angular_acceleration(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.Navigation)
  return target;
}

size_t Navigation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.Navigation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .autonomous_proto.Navigation.Position position = 2;
  if (this->_internal_has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.position_);
  }

  // .autonomous_proto.Navigation.Orientation orientation = 3;
  if (this->_internal_has_orientation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.orientation_);
  }

  // .autonomous_proto.Navigation.Velocity velocity = 4;
  if (this->_internal_has_velocity()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.velocity_);
  }

  // .autonomous_proto.Navigation.AngularVelocity angular_velocity = 5;
  if (this->_internal_has_angular_velocity()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.angular_velocity_);
  }

  // .autonomous_proto.Navigation.Acceleration acceleration = 6;
  if (this->_internal_has_acceleration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.acceleration_);
  }

  // .autonomous_proto.Navigation.AngularAcceleration angular_acceleration = 7;
  if (this->_internal_has_angular_acceleration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.angular_acceleration_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Navigation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Navigation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Navigation::GetClassData() const { return &_class_data_; }


void Navigation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Navigation*>(&to_msg);
  auto& from = static_cast<const Navigation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.Navigation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::autonomous_proto::MessageInfo::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_position()) {
    _this->_internal_mutable_position()->::autonomous_proto::Navigation_Position::MergeFrom(
        from._internal_position());
  }
  if (from._internal_has_orientation()) {
    _this->_internal_mutable_orientation()->::autonomous_proto::Navigation_Orientation::MergeFrom(
        from._internal_orientation());
  }
  if (from._internal_has_velocity()) {
    _this->_internal_mutable_velocity()->::autonomous_proto::Navigation_Velocity::MergeFrom(
        from._internal_velocity());
  }
  if (from._internal_has_angular_velocity()) {
    _this->_internal_mutable_angular_velocity()->::autonomous_proto::Navigation_AngularVelocity::MergeFrom(
        from._internal_angular_velocity());
  }
  if (from._internal_has_acceleration()) {
    _this->_internal_mutable_acceleration()->::autonomous_proto::Navigation_Acceleration::MergeFrom(
        from._internal_acceleration());
  }
  if (from._internal_has_angular_acceleration()) {
    _this->_internal_mutable_angular_acceleration()->::autonomous_proto::Navigation_AngularAcceleration::MergeFrom(
        from._internal_angular_acceleration());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Navigation::CopyFrom(const Navigation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.Navigation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Navigation::IsInitialized() const {
  return true;
}

void Navigation::InternalSwap(Navigation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Navigation, _impl_.angular_acceleration_)
      + sizeof(Navigation::_impl_.angular_acceleration_)
      - PROTOBUF_FIELD_OFFSET(Navigation, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Navigation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_navigation_2eproto_getter, &descriptor_table_navigation_2eproto_once,
      file_level_metadata_navigation_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace autonomous_proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::autonomous_proto::Navigation_Position*
Arena::CreateMaybeMessage< ::autonomous_proto::Navigation_Position >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::Navigation_Position >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::Navigation_Orientation*
Arena::CreateMaybeMessage< ::autonomous_proto::Navigation_Orientation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::Navigation_Orientation >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::Navigation_Velocity*
Arena::CreateMaybeMessage< ::autonomous_proto::Navigation_Velocity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::Navigation_Velocity >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::Navigation_AngularVelocity*
Arena::CreateMaybeMessage< ::autonomous_proto::Navigation_AngularVelocity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::Navigation_AngularVelocity >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::Navigation_Acceleration*
Arena::CreateMaybeMessage< ::autonomous_proto::Navigation_Acceleration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::Navigation_Acceleration >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::Navigation_AngularAcceleration*
Arena::CreateMaybeMessage< ::autonomous_proto::Navigation_AngularAcceleration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::Navigation_AngularAcceleration >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::Navigation*
Arena::CreateMaybeMessage< ::autonomous_proto::Navigation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::Navigation >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
