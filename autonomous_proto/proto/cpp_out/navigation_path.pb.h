// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: navigation_path.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_navigation_5fpath_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_navigation_5fpath_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "message_info.pb.h"
#include "navigation.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_navigation_5fpath_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_navigation_5fpath_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_navigation_5fpath_2eproto;
namespace autonomous_proto {
class NavigationPath;
struct NavigationPathDefaultTypeInternal;
extern NavigationPathDefaultTypeInternal _NavigationPath_default_instance_;
}  // namespace autonomous_proto
PROTOBUF_NAMESPACE_OPEN
template<> ::autonomous_proto::NavigationPath* Arena::CreateMaybeMessage<::autonomous_proto::NavigationPath>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace autonomous_proto {

// ===================================================================

class NavigationPath final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autonomous_proto.NavigationPath) */ {
 public:
  inline NavigationPath() : NavigationPath(nullptr) {}
  ~NavigationPath() override;
  explicit PROTOBUF_CONSTEXPR NavigationPath(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NavigationPath(const NavigationPath& from);
  NavigationPath(NavigationPath&& from) noexcept
    : NavigationPath() {
    *this = ::std::move(from);
  }

  inline NavigationPath& operator=(const NavigationPath& from) {
    CopyFrom(from);
    return *this;
  }
  inline NavigationPath& operator=(NavigationPath&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NavigationPath& default_instance() {
    return *internal_default_instance();
  }
  static inline const NavigationPath* internal_default_instance() {
    return reinterpret_cast<const NavigationPath*>(
               &_NavigationPath_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NavigationPath& a, NavigationPath& b) {
    a.Swap(&b);
  }
  inline void Swap(NavigationPath* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NavigationPath* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NavigationPath* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NavigationPath>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NavigationPath& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const NavigationPath& from) {
    NavigationPath::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NavigationPath* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autonomous_proto.NavigationPath";
  }
  protected:
  explicit NavigationPath(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .autonomous_proto.Navigation.Position position = 2;
  int position_size() const;
  private:
  int _internal_position_size() const;
  public:
  void clear_position();
  ::autonomous_proto::Navigation_Position* mutable_position(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autonomous_proto::Navigation_Position >*
      mutable_position();
  private:
  const ::autonomous_proto::Navigation_Position& _internal_position(int index) const;
  ::autonomous_proto::Navigation_Position* _internal_add_position();
  public:
  const ::autonomous_proto::Navigation_Position& position(int index) const;
  ::autonomous_proto::Navigation_Position* add_position();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autonomous_proto::Navigation_Position >&
      position() const;

  // .autonomous_proto.MessageInfo header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::autonomous_proto::MessageInfo& header() const;
  PROTOBUF_NODISCARD ::autonomous_proto::MessageInfo* release_header();
  ::autonomous_proto::MessageInfo* mutable_header();
  void set_allocated_header(::autonomous_proto::MessageInfo* header);
  private:
  const ::autonomous_proto::MessageInfo& _internal_header() const;
  ::autonomous_proto::MessageInfo* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::autonomous_proto::MessageInfo* header);
  ::autonomous_proto::MessageInfo* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:autonomous_proto.NavigationPath)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autonomous_proto::Navigation_Position > position_;
    ::autonomous_proto::MessageInfo* header_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_navigation_5fpath_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NavigationPath

// .autonomous_proto.MessageInfo header = 1;
inline bool NavigationPath::_internal_has_header() const {
  return this != internal_default_instance() && _impl_.header_ != nullptr;
}
inline bool NavigationPath::has_header() const {
  return _internal_has_header();
}
inline const ::autonomous_proto::MessageInfo& NavigationPath::_internal_header() const {
  const ::autonomous_proto::MessageInfo* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::autonomous_proto::MessageInfo&>(
      ::autonomous_proto::_MessageInfo_default_instance_);
}
inline const ::autonomous_proto::MessageInfo& NavigationPath::header() const {
  // @@protoc_insertion_point(field_get:autonomous_proto.NavigationPath.header)
  return _internal_header();
}
inline void NavigationPath::unsafe_arena_set_allocated_header(
    ::autonomous_proto::MessageInfo* header) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:autonomous_proto.NavigationPath.header)
}
inline ::autonomous_proto::MessageInfo* NavigationPath::release_header() {
  
  ::autonomous_proto::MessageInfo* temp = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::autonomous_proto::MessageInfo* NavigationPath::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:autonomous_proto.NavigationPath.header)
  
  ::autonomous_proto::MessageInfo* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::autonomous_proto::MessageInfo* NavigationPath::_internal_mutable_header() {
  
  if (_impl_.header_ == nullptr) {
    auto* p = CreateMaybeMessage<::autonomous_proto::MessageInfo>(GetArenaForAllocation());
    _impl_.header_ = p;
  }
  return _impl_.header_;
}
inline ::autonomous_proto::MessageInfo* NavigationPath::mutable_header() {
  ::autonomous_proto::MessageInfo* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:autonomous_proto.NavigationPath.header)
  return _msg;
}
inline void NavigationPath::set_allocated_header(::autonomous_proto::MessageInfo* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header));
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.header_ = header;
  // @@protoc_insertion_point(field_set_allocated:autonomous_proto.NavigationPath.header)
}

// repeated .autonomous_proto.Navigation.Position position = 2;
inline int NavigationPath::_internal_position_size() const {
  return _impl_.position_.size();
}
inline int NavigationPath::position_size() const {
  return _internal_position_size();
}
inline ::autonomous_proto::Navigation_Position* NavigationPath::mutable_position(int index) {
  // @@protoc_insertion_point(field_mutable:autonomous_proto.NavigationPath.position)
  return _impl_.position_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autonomous_proto::Navigation_Position >*
NavigationPath::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:autonomous_proto.NavigationPath.position)
  return &_impl_.position_;
}
inline const ::autonomous_proto::Navigation_Position& NavigationPath::_internal_position(int index) const {
  return _impl_.position_.Get(index);
}
inline const ::autonomous_proto::Navigation_Position& NavigationPath::position(int index) const {
  // @@protoc_insertion_point(field_get:autonomous_proto.NavigationPath.position)
  return _internal_position(index);
}
inline ::autonomous_proto::Navigation_Position* NavigationPath::_internal_add_position() {
  return _impl_.position_.Add();
}
inline ::autonomous_proto::Navigation_Position* NavigationPath::add_position() {
  ::autonomous_proto::Navigation_Position* _add = _internal_add_position();
  // @@protoc_insertion_point(field_add:autonomous_proto.NavigationPath.position)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autonomous_proto::Navigation_Position >&
NavigationPath::position() const {
  // @@protoc_insertion_point(field_list:autonomous_proto.NavigationPath.position)
  return _impl_.position_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace autonomous_proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_navigation_5fpath_2eproto
