// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_info.proto

#include "message_info.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace autonomous_proto {
PROTOBUF_CONSTEXPR MessageInfo_ModuleName::MessageInfo_ModuleName(
    ::_pbi::ConstantInitialized) {}
struct MessageInfo_ModuleNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageInfo_ModuleNameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageInfo_ModuleNameDefaultTypeInternal() {}
  union {
    MessageInfo_ModuleName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageInfo_ModuleNameDefaultTypeInternal _MessageInfo_ModuleName_default_instance_;
PROTOBUF_CONSTEXPR MessageInfo_TopicName::MessageInfo_TopicName(
    ::_pbi::ConstantInitialized) {}
struct MessageInfo_TopicNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageInfo_TopicNameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageInfo_TopicNameDefaultTypeInternal() {}
  union {
    MessageInfo_TopicName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageInfo_TopicNameDefaultTypeInternal _MessageInfo_TopicName_default_instance_;
PROTOBUF_CONSTEXPR MessageInfo_Source::MessageInfo_Source(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.count_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/nullptr
  , /*decltype(_impl_.time_get_)*/nullptr
  , /*decltype(_impl_.module_name_)*/0
  , /*decltype(_impl_.topic_name_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MessageInfo_SourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageInfo_SourceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageInfo_SourceDefaultTypeInternal() {}
  union {
    MessageInfo_Source _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageInfo_SourceDefaultTypeInternal _MessageInfo_Source_default_instance_;
PROTOBUF_CONSTEXPR MessageInfo::MessageInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sources_)*/{}
  , /*decltype(_impl_.count_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/nullptr
  , /*decltype(_impl_.module_name_)*/0
  , /*decltype(_impl_.topic_name_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MessageInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageInfoDefaultTypeInternal() {}
  union {
    MessageInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageInfoDefaultTypeInternal _MessageInfo_default_instance_;
}  // namespace autonomous_proto
static ::_pb::Metadata file_level_metadata_message_5finfo_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_message_5finfo_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_message_5finfo_2eproto = nullptr;

const uint32_t TableStruct_message_5finfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo_ModuleName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo_TopicName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo_Source, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo_Source, _impl_.module_name_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo_Source, _impl_.topic_name_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo_Source, _impl_.count_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo_Source, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo_Source, _impl_.time_get_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo, _impl_.sources_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo, _impl_.module_name_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo, _impl_.topic_name_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo, _impl_.count_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::MessageInfo, _impl_.timestamp_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::autonomous_proto::MessageInfo_ModuleName)},
  { 6, -1, -1, sizeof(::autonomous_proto::MessageInfo_TopicName)},
  { 12, -1, -1, sizeof(::autonomous_proto::MessageInfo_Source)},
  { 23, -1, -1, sizeof(::autonomous_proto::MessageInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::autonomous_proto::_MessageInfo_ModuleName_default_instance_._instance,
  &::autonomous_proto::_MessageInfo_TopicName_default_instance_._instance,
  &::autonomous_proto::_MessageInfo_Source_default_instance_._instance,
  &::autonomous_proto::_MessageInfo_default_instance_._instance,
};

const char descriptor_table_protodef_message_5finfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022message_info.proto\022\020autonomous_proto\032\036"
  "google/protobuf/wrappers.proto\"\253\007\n\013Messa"
  "geInfo\0225\n\007sources\030\001 \003(\0132$.autonomous_pro"
  "to.MessageInfo.Source\022C\n\013module_name\030\002 \001"
  "(\0162..autonomous_proto.MessageInfo.Module"
  "Name.Value\022A\n\ntopic_name\030\003 \001(\0162-.autonom"
  "ous_proto.MessageInfo.TopicName.Value\022*\n"
  "\005count\030\004 \001(\0132\033.google.protobuf.Int64Valu"
  "e\022.\n\ttimestamp\030\005 \001(\0132\033.google.protobuf.I"
  "nt64Value\032\244\001\n\nModuleName\"\225\001\n\005Value\022\013\n\007un"
  "known\020\000\022\022\n\rmsg_converter\020\200\004\022\034\n\027communica"
  "tion_utilities\020\200\010\022\014\n\007copycat\020\370U\022\022\n\rlocal"
  "_roadnet\020\340]\022\023\n\016motion_control\020\200`\022\026\n\tunde"
  "fined\020\377\377\377\377\377\377\377\377\377\001\032\273\001\n\tTopicName\"\255\001\n\005Value"
  "\022\013\n\007unknown\020\000\022\022\n\rvehicle_state\020\200\010\022\017\n\nnav"
  "igation\020\200\020\022\017\n\nlocal_path\020\200P\022\021\n\014copycat_p"
  "ath\020\370U\022\014\n\007control\020\200`\022\023\n\016control_limits\020\201"
  "`\022\023\n\016control_sphere\020\202`\022\026\n\tundefined\020\377\377\377\377"
  "\377\377\377\377\377\001\032\233\002\n\006Source\022C\n\013module_name\030\001 \001(\0162."
  ".autonomous_proto.MessageInfo.ModuleName"
  ".Value\022A\n\ntopic_name\030\002 \001(\0162-.autonomous_"
  "proto.MessageInfo.TopicName.Value\022*\n\005cou"
  "nt\030\003 \001(\0132\033.google.protobuf.Int64Value\022.\n"
  "\ttimestamp\030\004 \001(\0132\033.google.protobuf.Int64"
  "Value\022-\n\010time_get\030\005 \001(\0132\033.google.protobu"
  "f.Int64Valueb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_message_5finfo_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::_pbi::once_flag descriptor_table_message_5finfo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_message_5finfo_2eproto = {
    false, false, 1020, descriptor_table_protodef_message_5finfo_2eproto,
    "message_info.proto",
    &descriptor_table_message_5finfo_2eproto_once, descriptor_table_message_5finfo_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_message_5finfo_2eproto::offsets,
    file_level_metadata_message_5finfo_2eproto, file_level_enum_descriptors_message_5finfo_2eproto,
    file_level_service_descriptors_message_5finfo_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_message_5finfo_2eproto_getter() {
  return &descriptor_table_message_5finfo_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_message_5finfo_2eproto(&descriptor_table_message_5finfo_2eproto);
namespace autonomous_proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageInfo_ModuleName_Value_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_message_5finfo_2eproto);
  return file_level_enum_descriptors_message_5finfo_2eproto[0];
}
bool MessageInfo_ModuleName_Value_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 512:
    case 1024:
    case 11000:
    case 12000:
    case 12288:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MessageInfo_ModuleName_Value MessageInfo_ModuleName::unknown;
constexpr MessageInfo_ModuleName_Value MessageInfo_ModuleName::msg_converter;
constexpr MessageInfo_ModuleName_Value MessageInfo_ModuleName::communication_utilities;
constexpr MessageInfo_ModuleName_Value MessageInfo_ModuleName::copycat;
constexpr MessageInfo_ModuleName_Value MessageInfo_ModuleName::local_roadnet;
constexpr MessageInfo_ModuleName_Value MessageInfo_ModuleName::motion_control;
constexpr MessageInfo_ModuleName_Value MessageInfo_ModuleName::undefined;
constexpr MessageInfo_ModuleName_Value MessageInfo_ModuleName::Value_MIN;
constexpr MessageInfo_ModuleName_Value MessageInfo_ModuleName::Value_MAX;
constexpr int MessageInfo_ModuleName::Value_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageInfo_TopicName_Value_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_message_5finfo_2eproto);
  return file_level_enum_descriptors_message_5finfo_2eproto[1];
}
bool MessageInfo_TopicName_Value_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1024:
    case 2048:
    case 10240:
    case 11000:
    case 12288:
    case 12289:
    case 12290:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName::unknown;
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName::vehicle_state;
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName::navigation;
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName::local_path;
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName::copycat_path;
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName::control;
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName::control_limits;
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName::control_sphere;
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName::undefined;
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName::Value_MIN;
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName::Value_MAX;
constexpr int MessageInfo_TopicName::Value_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class MessageInfo_ModuleName::_Internal {
 public:
};

MessageInfo_ModuleName::MessageInfo_ModuleName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.MessageInfo.ModuleName)
}
MessageInfo_ModuleName::MessageInfo_ModuleName(const MessageInfo_ModuleName& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MessageInfo_ModuleName* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.MessageInfo.ModuleName)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageInfo_ModuleName::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageInfo_ModuleName::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MessageInfo_ModuleName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_5finfo_2eproto_getter, &descriptor_table_message_5finfo_2eproto_once,
      file_level_metadata_message_5finfo_2eproto[0]);
}

// ===================================================================

class MessageInfo_TopicName::_Internal {
 public:
};

MessageInfo_TopicName::MessageInfo_TopicName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.MessageInfo.TopicName)
}
MessageInfo_TopicName::MessageInfo_TopicName(const MessageInfo_TopicName& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MessageInfo_TopicName* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.MessageInfo.TopicName)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageInfo_TopicName::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageInfo_TopicName::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MessageInfo_TopicName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_5finfo_2eproto_getter, &descriptor_table_message_5finfo_2eproto_once,
      file_level_metadata_message_5finfo_2eproto[1]);
}

// ===================================================================

class MessageInfo_Source::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Int64Value& count(const MessageInfo_Source* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Int64Value& timestamp(const MessageInfo_Source* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Int64Value& time_get(const MessageInfo_Source* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Int64Value&
MessageInfo_Source::_Internal::count(const MessageInfo_Source* msg) {
  return *msg->_impl_.count_;
}
const ::PROTOBUF_NAMESPACE_ID::Int64Value&
MessageInfo_Source::_Internal::timestamp(const MessageInfo_Source* msg) {
  return *msg->_impl_.timestamp_;
}
const ::PROTOBUF_NAMESPACE_ID::Int64Value&
MessageInfo_Source::_Internal::time_get(const MessageInfo_Source* msg) {
  return *msg->_impl_.time_get_;
}
void MessageInfo_Source::clear_count() {
  if (GetArenaForAllocation() == nullptr && _impl_.count_ != nullptr) {
    delete _impl_.count_;
  }
  _impl_.count_ = nullptr;
}
void MessageInfo_Source::clear_timestamp() {
  if (GetArenaForAllocation() == nullptr && _impl_.timestamp_ != nullptr) {
    delete _impl_.timestamp_;
  }
  _impl_.timestamp_ = nullptr;
}
void MessageInfo_Source::clear_time_get() {
  if (GetArenaForAllocation() == nullptr && _impl_.time_get_ != nullptr) {
    delete _impl_.time_get_;
  }
  _impl_.time_get_ = nullptr;
}
MessageInfo_Source::MessageInfo_Source(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.MessageInfo.Source)
}
MessageInfo_Source::MessageInfo_Source(const MessageInfo_Source& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MessageInfo_Source* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.count_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.time_get_){nullptr}
    , decltype(_impl_.module_name_){}
    , decltype(_impl_.topic_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_count()) {
    _this->_impl_.count_ = new ::PROTOBUF_NAMESPACE_ID::Int64Value(*from._impl_.count_);
  }
  if (from._internal_has_timestamp()) {
    _this->_impl_.timestamp_ = new ::PROTOBUF_NAMESPACE_ID::Int64Value(*from._impl_.timestamp_);
  }
  if (from._internal_has_time_get()) {
    _this->_impl_.time_get_ = new ::PROTOBUF_NAMESPACE_ID::Int64Value(*from._impl_.time_get_);
  }
  ::memcpy(&_impl_.module_name_, &from._impl_.module_name_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.topic_name_) -
    reinterpret_cast<char*>(&_impl_.module_name_)) + sizeof(_impl_.topic_name_));
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.MessageInfo.Source)
}

inline void MessageInfo_Source::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.count_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.time_get_){nullptr}
    , decltype(_impl_.module_name_){0}
    , decltype(_impl_.topic_name_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MessageInfo_Source::~MessageInfo_Source() {
  // @@protoc_insertion_point(destructor:autonomous_proto.MessageInfo.Source)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageInfo_Source::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.count_;
  if (this != internal_default_instance()) delete _impl_.timestamp_;
  if (this != internal_default_instance()) delete _impl_.time_get_;
}

void MessageInfo_Source::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageInfo_Source::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.MessageInfo.Source)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.count_ != nullptr) {
    delete _impl_.count_;
  }
  _impl_.count_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.timestamp_ != nullptr) {
    delete _impl_.timestamp_;
  }
  _impl_.timestamp_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.time_get_ != nullptr) {
    delete _impl_.time_get_;
  }
  _impl_.time_get_ = nullptr;
  ::memset(&_impl_.module_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.topic_name_) -
      reinterpret_cast<char*>(&_impl_.module_name_)) + sizeof(_impl_.topic_name_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageInfo_Source::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .autonomous_proto.MessageInfo.ModuleName.Value module_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_module_name(static_cast<::autonomous_proto::MessageInfo_ModuleName_Value>(val));
        } else
          goto handle_unusual;
        continue;
      // .autonomous_proto.MessageInfo.TopicName.Value topic_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_topic_name(static_cast<::autonomous_proto::MessageInfo_TopicName_Value>(val));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Int64Value count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_count(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Int64Value timestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Int64Value time_get = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_time_get(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MessageInfo_Source::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.MessageInfo.Source)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .autonomous_proto.MessageInfo.ModuleName.Value module_name = 1;
  if (this->_internal_module_name() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_module_name(), target);
  }

  // .autonomous_proto.MessageInfo.TopicName.Value topic_name = 2;
  if (this->_internal_topic_name() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_topic_name(), target);
  }

  // .google.protobuf.Int64Value count = 3;
  if (this->_internal_has_count()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::count(this),
        _Internal::count(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int64Value timestamp = 4;
  if (this->_internal_has_timestamp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int64Value time_get = 5;
  if (this->_internal_has_time_get()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::time_get(this),
        _Internal::time_get(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.MessageInfo.Source)
  return target;
}

size_t MessageInfo_Source::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.MessageInfo.Source)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Int64Value count = 3;
  if (this->_internal_has_count()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.count_);
  }

  // .google.protobuf.Int64Value timestamp = 4;
  if (this->_internal_has_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.timestamp_);
  }

  // .google.protobuf.Int64Value time_get = 5;
  if (this->_internal_has_time_get()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.time_get_);
  }

  // .autonomous_proto.MessageInfo.ModuleName.Value module_name = 1;
  if (this->_internal_module_name() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_module_name());
  }

  // .autonomous_proto.MessageInfo.TopicName.Value topic_name = 2;
  if (this->_internal_topic_name() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_topic_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageInfo_Source::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageInfo_Source::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageInfo_Source::GetClassData() const { return &_class_data_; }


void MessageInfo_Source::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageInfo_Source*>(&to_msg);
  auto& from = static_cast<const MessageInfo_Source&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.MessageInfo.Source)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_count()) {
    _this->_internal_mutable_count()->::PROTOBUF_NAMESPACE_ID::Int64Value::MergeFrom(
        from._internal_count());
  }
  if (from._internal_has_timestamp()) {
    _this->_internal_mutable_timestamp()->::PROTOBUF_NAMESPACE_ID::Int64Value::MergeFrom(
        from._internal_timestamp());
  }
  if (from._internal_has_time_get()) {
    _this->_internal_mutable_time_get()->::PROTOBUF_NAMESPACE_ID::Int64Value::MergeFrom(
        from._internal_time_get());
  }
  if (from._internal_module_name() != 0) {
    _this->_internal_set_module_name(from._internal_module_name());
  }
  if (from._internal_topic_name() != 0) {
    _this->_internal_set_topic_name(from._internal_topic_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageInfo_Source::CopyFrom(const MessageInfo_Source& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.MessageInfo.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageInfo_Source::IsInitialized() const {
  return true;
}

void MessageInfo_Source::InternalSwap(MessageInfo_Source* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageInfo_Source, _impl_.topic_name_)
      + sizeof(MessageInfo_Source::_impl_.topic_name_)
      - PROTOBUF_FIELD_OFFSET(MessageInfo_Source, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageInfo_Source::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_5finfo_2eproto_getter, &descriptor_table_message_5finfo_2eproto_once,
      file_level_metadata_message_5finfo_2eproto[2]);
}

// ===================================================================

class MessageInfo::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Int64Value& count(const MessageInfo* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Int64Value& timestamp(const MessageInfo* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Int64Value&
MessageInfo::_Internal::count(const MessageInfo* msg) {
  return *msg->_impl_.count_;
}
const ::PROTOBUF_NAMESPACE_ID::Int64Value&
MessageInfo::_Internal::timestamp(const MessageInfo* msg) {
  return *msg->_impl_.timestamp_;
}
void MessageInfo::clear_count() {
  if (GetArenaForAllocation() == nullptr && _impl_.count_ != nullptr) {
    delete _impl_.count_;
  }
  _impl_.count_ = nullptr;
}
void MessageInfo::clear_timestamp() {
  if (GetArenaForAllocation() == nullptr && _impl_.timestamp_ != nullptr) {
    delete _impl_.timestamp_;
  }
  _impl_.timestamp_ = nullptr;
}
MessageInfo::MessageInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.MessageInfo)
}
MessageInfo::MessageInfo(const MessageInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MessageInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sources_){from._impl_.sources_}
    , decltype(_impl_.count_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.module_name_){}
    , decltype(_impl_.topic_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_count()) {
    _this->_impl_.count_ = new ::PROTOBUF_NAMESPACE_ID::Int64Value(*from._impl_.count_);
  }
  if (from._internal_has_timestamp()) {
    _this->_impl_.timestamp_ = new ::PROTOBUF_NAMESPACE_ID::Int64Value(*from._impl_.timestamp_);
  }
  ::memcpy(&_impl_.module_name_, &from._impl_.module_name_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.topic_name_) -
    reinterpret_cast<char*>(&_impl_.module_name_)) + sizeof(_impl_.topic_name_));
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.MessageInfo)
}

inline void MessageInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sources_){arena}
    , decltype(_impl_.count_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.module_name_){0}
    , decltype(_impl_.topic_name_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MessageInfo::~MessageInfo() {
  // @@protoc_insertion_point(destructor:autonomous_proto.MessageInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sources_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.count_;
  if (this != internal_default_instance()) delete _impl_.timestamp_;
}

void MessageInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.MessageInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sources_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.count_ != nullptr) {
    delete _impl_.count_;
  }
  _impl_.count_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.timestamp_ != nullptr) {
    delete _impl_.timestamp_;
  }
  _impl_.timestamp_ = nullptr;
  ::memset(&_impl_.module_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.topic_name_) -
      reinterpret_cast<char*>(&_impl_.module_name_)) + sizeof(_impl_.topic_name_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .autonomous_proto.MessageInfo.Source sources = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .autonomous_proto.MessageInfo.ModuleName.Value module_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_module_name(static_cast<::autonomous_proto::MessageInfo_ModuleName_Value>(val));
        } else
          goto handle_unusual;
        continue;
      // .autonomous_proto.MessageInfo.TopicName.Value topic_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_topic_name(static_cast<::autonomous_proto::MessageInfo_TopicName_Value>(val));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Int64Value count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_count(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Int64Value timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MessageInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.MessageInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .autonomous_proto.MessageInfo.Source sources = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sources_size()); i < n; i++) {
    const auto& repfield = this->_internal_sources(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .autonomous_proto.MessageInfo.ModuleName.Value module_name = 2;
  if (this->_internal_module_name() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_module_name(), target);
  }

  // .autonomous_proto.MessageInfo.TopicName.Value topic_name = 3;
  if (this->_internal_topic_name() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_topic_name(), target);
  }

  // .google.protobuf.Int64Value count = 4;
  if (this->_internal_has_count()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::count(this),
        _Internal::count(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int64Value timestamp = 5;
  if (this->_internal_has_timestamp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.MessageInfo)
  return target;
}

size_t MessageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.MessageInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .autonomous_proto.MessageInfo.Source sources = 1;
  total_size += 1UL * this->_internal_sources_size();
  for (const auto& msg : this->_impl_.sources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.Int64Value count = 4;
  if (this->_internal_has_count()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.count_);
  }

  // .google.protobuf.Int64Value timestamp = 5;
  if (this->_internal_has_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.timestamp_);
  }

  // .autonomous_proto.MessageInfo.ModuleName.Value module_name = 2;
  if (this->_internal_module_name() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_module_name());
  }

  // .autonomous_proto.MessageInfo.TopicName.Value topic_name = 3;
  if (this->_internal_topic_name() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_topic_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageInfo::GetClassData() const { return &_class_data_; }


void MessageInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageInfo*>(&to_msg);
  auto& from = static_cast<const MessageInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.MessageInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.sources_.MergeFrom(from._impl_.sources_);
  if (from._internal_has_count()) {
    _this->_internal_mutable_count()->::PROTOBUF_NAMESPACE_ID::Int64Value::MergeFrom(
        from._internal_count());
  }
  if (from._internal_has_timestamp()) {
    _this->_internal_mutable_timestamp()->::PROTOBUF_NAMESPACE_ID::Int64Value::MergeFrom(
        from._internal_timestamp());
  }
  if (from._internal_module_name() != 0) {
    _this->_internal_set_module_name(from._internal_module_name());
  }
  if (from._internal_topic_name() != 0) {
    _this->_internal_set_topic_name(from._internal_topic_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageInfo::CopyFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageInfo::IsInitialized() const {
  return true;
}

void MessageInfo::InternalSwap(MessageInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sources_.InternalSwap(&other->_impl_.sources_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageInfo, _impl_.topic_name_)
      + sizeof(MessageInfo::_impl_.topic_name_)
      - PROTOBUF_FIELD_OFFSET(MessageInfo, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_5finfo_2eproto_getter, &descriptor_table_message_5finfo_2eproto_once,
      file_level_metadata_message_5finfo_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace autonomous_proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::autonomous_proto::MessageInfo_ModuleName*
Arena::CreateMaybeMessage< ::autonomous_proto::MessageInfo_ModuleName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::MessageInfo_ModuleName >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::MessageInfo_TopicName*
Arena::CreateMaybeMessage< ::autonomous_proto::MessageInfo_TopicName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::MessageInfo_TopicName >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::MessageInfo_Source*
Arena::CreateMaybeMessage< ::autonomous_proto::MessageInfo_Source >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::MessageInfo_Source >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::MessageInfo*
Arena::CreateMaybeMessage< ::autonomous_proto::MessageInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::MessageInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
