// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: communication_command.proto

#include "communication_command.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace autonomous_proto {
PROTOBUF_CONSTEXPR CommunicationCommand_Markers::CommunicationCommand_Markers(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ecu_send_on_)*/nullptr
  , /*decltype(_impl_.auto_enable_)*/nullptr
  , /*decltype(_impl_.steer_enable_)*/nullptr
  , /*decltype(_impl_.speed_enable_)*/nullptr
  , /*decltype(_impl_.gear_enable_)*/nullptr
  , /*decltype(_impl_.throttle_enable_)*/nullptr
  , /*decltype(_impl_.brake_enable_)*/nullptr
  , /*decltype(_impl_.park_enable_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CommunicationCommand_MarkersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommunicationCommand_MarkersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommunicationCommand_MarkersDefaultTypeInternal() {}
  union {
    CommunicationCommand_Markers _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommunicationCommand_MarkersDefaultTypeInternal _CommunicationCommand_Markers_default_instance_;
PROTOBUF_CONSTEXPR CommunicationCommand_Command::CommunicationCommand_Command(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.markers_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CommunicationCommand_CommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommunicationCommand_CommandDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommunicationCommand_CommandDefaultTypeInternal() {}
  union {
    CommunicationCommand_Command _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommunicationCommand_CommandDefaultTypeInternal _CommunicationCommand_Command_default_instance_;
PROTOBUF_CONSTEXPR CommunicationCommand_Response::CommunicationCommand_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.markers_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CommunicationCommand_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommunicationCommand_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommunicationCommand_ResponseDefaultTypeInternal() {}
  union {
    CommunicationCommand_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommunicationCommand_ResponseDefaultTypeInternal _CommunicationCommand_Response_default_instance_;
PROTOBUF_CONSTEXPR CommunicationCommand::CommunicationCommand(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.command_)*/nullptr
  , /*decltype(_impl_.response_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CommunicationCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommunicationCommandDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommunicationCommandDefaultTypeInternal() {}
  union {
    CommunicationCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommunicationCommandDefaultTypeInternal _CommunicationCommand_default_instance_;
}  // namespace autonomous_proto
static ::_pb::Metadata file_level_metadata_communication_5fcommand_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_communication_5fcommand_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_communication_5fcommand_2eproto = nullptr;

const uint32_t TableStruct_communication_5fcommand_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Markers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Markers, _impl_.ecu_send_on_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Markers, _impl_.auto_enable_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Markers, _impl_.steer_enable_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Markers, _impl_.speed_enable_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Markers, _impl_.gear_enable_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Markers, _impl_.throttle_enable_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Markers, _impl_.brake_enable_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Markers, _impl_.park_enable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Command, _impl_.markers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand_Response, _impl_.markers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand, _impl_.command_),
  PROTOBUF_FIELD_OFFSET(::autonomous_proto::CommunicationCommand, _impl_.response_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::autonomous_proto::CommunicationCommand_Markers)},
  { 14, -1, -1, sizeof(::autonomous_proto::CommunicationCommand_Command)},
  { 21, -1, -1, sizeof(::autonomous_proto::CommunicationCommand_Response)},
  { 28, -1, -1, sizeof(::autonomous_proto::CommunicationCommand)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::autonomous_proto::_CommunicationCommand_Markers_default_instance_._instance,
  &::autonomous_proto::_CommunicationCommand_Command_default_instance_._instance,
  &::autonomous_proto::_CommunicationCommand_Response_default_instance_._instance,
  &::autonomous_proto::_CommunicationCommand_default_instance_._instance,
};

const char descriptor_table_protodef_communication_5fcommand_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033communication_command.proto\022\020autonomou"
  "s_proto\032\036google/protobuf/wrappers.proto\""
  "\316\005\n\024CommunicationCommand\022\?\n\007command\030\001 \001("
  "\0132..autonomous_proto.CommunicationComman"
  "d.Command\022A\n\010response\030\002 \001(\0132/.autonomous"
  "_proto.CommunicationCommand.Response\032\230\003\n"
  "\007Markers\022/\n\013ecu_send_on\030\001 \001(\0132\032.google.p"
  "rotobuf.BoolValue\022/\n\013auto_enable\030\002 \001(\0132\032"
  ".google.protobuf.BoolValue\0220\n\014steer_enab"
  "le\030\003 \001(\0132\032.google.protobuf.BoolValue\0220\n\014"
  "speed_enable\030\004 \001(\0132\032.google.protobuf.Boo"
  "lValue\022/\n\013gear_enable\030\005 \001(\0132\032.google.pro"
  "tobuf.BoolValue\0223\n\017throttle_enable\030\006 \001(\013"
  "2\032.google.protobuf.BoolValue\0220\n\014brake_en"
  "able\030\007 \001(\0132\032.google.protobuf.BoolValue\022/"
  "\n\013park_enable\030\010 \001(\0132\032.google.protobuf.Bo"
  "olValue\032J\n\007Command\022\?\n\007markers\030\001 \001(\0132..au"
  "tonomous_proto.CommunicationCommand.Mark"
  "ers\032K\n\010Response\022\?\n\007markers\030\001 \001(\0132..auton"
  "omous_proto.CommunicationCommand.Markers"
  "b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_communication_5fcommand_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::_pbi::once_flag descriptor_table_communication_5fcommand_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_communication_5fcommand_2eproto = {
    false, false, 808, descriptor_table_protodef_communication_5fcommand_2eproto,
    "communication_command.proto",
    &descriptor_table_communication_5fcommand_2eproto_once, descriptor_table_communication_5fcommand_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_communication_5fcommand_2eproto::offsets,
    file_level_metadata_communication_5fcommand_2eproto, file_level_enum_descriptors_communication_5fcommand_2eproto,
    file_level_service_descriptors_communication_5fcommand_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_communication_5fcommand_2eproto_getter() {
  return &descriptor_table_communication_5fcommand_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_communication_5fcommand_2eproto(&descriptor_table_communication_5fcommand_2eproto);
namespace autonomous_proto {

// ===================================================================

class CommunicationCommand_Markers::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& ecu_send_on(const CommunicationCommand_Markers* msg);
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& auto_enable(const CommunicationCommand_Markers* msg);
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& steer_enable(const CommunicationCommand_Markers* msg);
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& speed_enable(const CommunicationCommand_Markers* msg);
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& gear_enable(const CommunicationCommand_Markers* msg);
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& throttle_enable(const CommunicationCommand_Markers* msg);
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& brake_enable(const CommunicationCommand_Markers* msg);
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& park_enable(const CommunicationCommand_Markers* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
CommunicationCommand_Markers::_Internal::ecu_send_on(const CommunicationCommand_Markers* msg) {
  return *msg->_impl_.ecu_send_on_;
}
const ::PROTOBUF_NAMESPACE_ID::BoolValue&
CommunicationCommand_Markers::_Internal::auto_enable(const CommunicationCommand_Markers* msg) {
  return *msg->_impl_.auto_enable_;
}
const ::PROTOBUF_NAMESPACE_ID::BoolValue&
CommunicationCommand_Markers::_Internal::steer_enable(const CommunicationCommand_Markers* msg) {
  return *msg->_impl_.steer_enable_;
}
const ::PROTOBUF_NAMESPACE_ID::BoolValue&
CommunicationCommand_Markers::_Internal::speed_enable(const CommunicationCommand_Markers* msg) {
  return *msg->_impl_.speed_enable_;
}
const ::PROTOBUF_NAMESPACE_ID::BoolValue&
CommunicationCommand_Markers::_Internal::gear_enable(const CommunicationCommand_Markers* msg) {
  return *msg->_impl_.gear_enable_;
}
const ::PROTOBUF_NAMESPACE_ID::BoolValue&
CommunicationCommand_Markers::_Internal::throttle_enable(const CommunicationCommand_Markers* msg) {
  return *msg->_impl_.throttle_enable_;
}
const ::PROTOBUF_NAMESPACE_ID::BoolValue&
CommunicationCommand_Markers::_Internal::brake_enable(const CommunicationCommand_Markers* msg) {
  return *msg->_impl_.brake_enable_;
}
const ::PROTOBUF_NAMESPACE_ID::BoolValue&
CommunicationCommand_Markers::_Internal::park_enable(const CommunicationCommand_Markers* msg) {
  return *msg->_impl_.park_enable_;
}
void CommunicationCommand_Markers::clear_ecu_send_on() {
  if (GetArenaForAllocation() == nullptr && _impl_.ecu_send_on_ != nullptr) {
    delete _impl_.ecu_send_on_;
  }
  _impl_.ecu_send_on_ = nullptr;
}
void CommunicationCommand_Markers::clear_auto_enable() {
  if (GetArenaForAllocation() == nullptr && _impl_.auto_enable_ != nullptr) {
    delete _impl_.auto_enable_;
  }
  _impl_.auto_enable_ = nullptr;
}
void CommunicationCommand_Markers::clear_steer_enable() {
  if (GetArenaForAllocation() == nullptr && _impl_.steer_enable_ != nullptr) {
    delete _impl_.steer_enable_;
  }
  _impl_.steer_enable_ = nullptr;
}
void CommunicationCommand_Markers::clear_speed_enable() {
  if (GetArenaForAllocation() == nullptr && _impl_.speed_enable_ != nullptr) {
    delete _impl_.speed_enable_;
  }
  _impl_.speed_enable_ = nullptr;
}
void CommunicationCommand_Markers::clear_gear_enable() {
  if (GetArenaForAllocation() == nullptr && _impl_.gear_enable_ != nullptr) {
    delete _impl_.gear_enable_;
  }
  _impl_.gear_enable_ = nullptr;
}
void CommunicationCommand_Markers::clear_throttle_enable() {
  if (GetArenaForAllocation() == nullptr && _impl_.throttle_enable_ != nullptr) {
    delete _impl_.throttle_enable_;
  }
  _impl_.throttle_enable_ = nullptr;
}
void CommunicationCommand_Markers::clear_brake_enable() {
  if (GetArenaForAllocation() == nullptr && _impl_.brake_enable_ != nullptr) {
    delete _impl_.brake_enable_;
  }
  _impl_.brake_enable_ = nullptr;
}
void CommunicationCommand_Markers::clear_park_enable() {
  if (GetArenaForAllocation() == nullptr && _impl_.park_enable_ != nullptr) {
    delete _impl_.park_enable_;
  }
  _impl_.park_enable_ = nullptr;
}
CommunicationCommand_Markers::CommunicationCommand_Markers(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.CommunicationCommand.Markers)
}
CommunicationCommand_Markers::CommunicationCommand_Markers(const CommunicationCommand_Markers& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommunicationCommand_Markers* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ecu_send_on_){nullptr}
    , decltype(_impl_.auto_enable_){nullptr}
    , decltype(_impl_.steer_enable_){nullptr}
    , decltype(_impl_.speed_enable_){nullptr}
    , decltype(_impl_.gear_enable_){nullptr}
    , decltype(_impl_.throttle_enable_){nullptr}
    , decltype(_impl_.brake_enable_){nullptr}
    , decltype(_impl_.park_enable_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ecu_send_on()) {
    _this->_impl_.ecu_send_on_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from._impl_.ecu_send_on_);
  }
  if (from._internal_has_auto_enable()) {
    _this->_impl_.auto_enable_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from._impl_.auto_enable_);
  }
  if (from._internal_has_steer_enable()) {
    _this->_impl_.steer_enable_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from._impl_.steer_enable_);
  }
  if (from._internal_has_speed_enable()) {
    _this->_impl_.speed_enable_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from._impl_.speed_enable_);
  }
  if (from._internal_has_gear_enable()) {
    _this->_impl_.gear_enable_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from._impl_.gear_enable_);
  }
  if (from._internal_has_throttle_enable()) {
    _this->_impl_.throttle_enable_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from._impl_.throttle_enable_);
  }
  if (from._internal_has_brake_enable()) {
    _this->_impl_.brake_enable_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from._impl_.brake_enable_);
  }
  if (from._internal_has_park_enable()) {
    _this->_impl_.park_enable_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from._impl_.park_enable_);
  }
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.CommunicationCommand.Markers)
}

inline void CommunicationCommand_Markers::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ecu_send_on_){nullptr}
    , decltype(_impl_.auto_enable_){nullptr}
    , decltype(_impl_.steer_enable_){nullptr}
    , decltype(_impl_.speed_enable_){nullptr}
    , decltype(_impl_.gear_enable_){nullptr}
    , decltype(_impl_.throttle_enable_){nullptr}
    , decltype(_impl_.brake_enable_){nullptr}
    , decltype(_impl_.park_enable_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CommunicationCommand_Markers::~CommunicationCommand_Markers() {
  // @@protoc_insertion_point(destructor:autonomous_proto.CommunicationCommand.Markers)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommunicationCommand_Markers::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.ecu_send_on_;
  if (this != internal_default_instance()) delete _impl_.auto_enable_;
  if (this != internal_default_instance()) delete _impl_.steer_enable_;
  if (this != internal_default_instance()) delete _impl_.speed_enable_;
  if (this != internal_default_instance()) delete _impl_.gear_enable_;
  if (this != internal_default_instance()) delete _impl_.throttle_enable_;
  if (this != internal_default_instance()) delete _impl_.brake_enable_;
  if (this != internal_default_instance()) delete _impl_.park_enable_;
}

void CommunicationCommand_Markers::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommunicationCommand_Markers::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.CommunicationCommand.Markers)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.ecu_send_on_ != nullptr) {
    delete _impl_.ecu_send_on_;
  }
  _impl_.ecu_send_on_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.auto_enable_ != nullptr) {
    delete _impl_.auto_enable_;
  }
  _impl_.auto_enable_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.steer_enable_ != nullptr) {
    delete _impl_.steer_enable_;
  }
  _impl_.steer_enable_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.speed_enable_ != nullptr) {
    delete _impl_.speed_enable_;
  }
  _impl_.speed_enable_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.gear_enable_ != nullptr) {
    delete _impl_.gear_enable_;
  }
  _impl_.gear_enable_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.throttle_enable_ != nullptr) {
    delete _impl_.throttle_enable_;
  }
  _impl_.throttle_enable_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.brake_enable_ != nullptr) {
    delete _impl_.brake_enable_;
  }
  _impl_.brake_enable_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.park_enable_ != nullptr) {
    delete _impl_.park_enable_;
  }
  _impl_.park_enable_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommunicationCommand_Markers::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue ecu_send_on = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ecu_send_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue auto_enable = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_auto_enable(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue steer_enable = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_steer_enable(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue speed_enable = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_speed_enable(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue gear_enable = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_gear_enable(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue throttle_enable = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_throttle_enable(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue brake_enable = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_brake_enable(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue park_enable = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_park_enable(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommunicationCommand_Markers::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.CommunicationCommand.Markers)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue ecu_send_on = 1;
  if (this->_internal_has_ecu_send_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::ecu_send_on(this),
        _Internal::ecu_send_on(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue auto_enable = 2;
  if (this->_internal_has_auto_enable()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::auto_enable(this),
        _Internal::auto_enable(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue steer_enable = 3;
  if (this->_internal_has_steer_enable()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::steer_enable(this),
        _Internal::steer_enable(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue speed_enable = 4;
  if (this->_internal_has_speed_enable()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::speed_enable(this),
        _Internal::speed_enable(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue gear_enable = 5;
  if (this->_internal_has_gear_enable()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::gear_enable(this),
        _Internal::gear_enable(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue throttle_enable = 6;
  if (this->_internal_has_throttle_enable()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::throttle_enable(this),
        _Internal::throttle_enable(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue brake_enable = 7;
  if (this->_internal_has_brake_enable()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::brake_enable(this),
        _Internal::brake_enable(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue park_enable = 8;
  if (this->_internal_has_park_enable()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::park_enable(this),
        _Internal::park_enable(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.CommunicationCommand.Markers)
  return target;
}

size_t CommunicationCommand_Markers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.CommunicationCommand.Markers)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue ecu_send_on = 1;
  if (this->_internal_has_ecu_send_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.ecu_send_on_);
  }

  // .google.protobuf.BoolValue auto_enable = 2;
  if (this->_internal_has_auto_enable()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.auto_enable_);
  }

  // .google.protobuf.BoolValue steer_enable = 3;
  if (this->_internal_has_steer_enable()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.steer_enable_);
  }

  // .google.protobuf.BoolValue speed_enable = 4;
  if (this->_internal_has_speed_enable()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.speed_enable_);
  }

  // .google.protobuf.BoolValue gear_enable = 5;
  if (this->_internal_has_gear_enable()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.gear_enable_);
  }

  // .google.protobuf.BoolValue throttle_enable = 6;
  if (this->_internal_has_throttle_enable()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.throttle_enable_);
  }

  // .google.protobuf.BoolValue brake_enable = 7;
  if (this->_internal_has_brake_enable()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.brake_enable_);
  }

  // .google.protobuf.BoolValue park_enable = 8;
  if (this->_internal_has_park_enable()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.park_enable_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommunicationCommand_Markers::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommunicationCommand_Markers::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommunicationCommand_Markers::GetClassData() const { return &_class_data_; }


void CommunicationCommand_Markers::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommunicationCommand_Markers*>(&to_msg);
  auto& from = static_cast<const CommunicationCommand_Markers&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.CommunicationCommand.Markers)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_ecu_send_on()) {
    _this->_internal_mutable_ecu_send_on()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(
        from._internal_ecu_send_on());
  }
  if (from._internal_has_auto_enable()) {
    _this->_internal_mutable_auto_enable()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(
        from._internal_auto_enable());
  }
  if (from._internal_has_steer_enable()) {
    _this->_internal_mutable_steer_enable()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(
        from._internal_steer_enable());
  }
  if (from._internal_has_speed_enable()) {
    _this->_internal_mutable_speed_enable()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(
        from._internal_speed_enable());
  }
  if (from._internal_has_gear_enable()) {
    _this->_internal_mutable_gear_enable()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(
        from._internal_gear_enable());
  }
  if (from._internal_has_throttle_enable()) {
    _this->_internal_mutable_throttle_enable()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(
        from._internal_throttle_enable());
  }
  if (from._internal_has_brake_enable()) {
    _this->_internal_mutable_brake_enable()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(
        from._internal_brake_enable());
  }
  if (from._internal_has_park_enable()) {
    _this->_internal_mutable_park_enable()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(
        from._internal_park_enable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommunicationCommand_Markers::CopyFrom(const CommunicationCommand_Markers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.CommunicationCommand.Markers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommunicationCommand_Markers::IsInitialized() const {
  return true;
}

void CommunicationCommand_Markers::InternalSwap(CommunicationCommand_Markers* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommunicationCommand_Markers, _impl_.park_enable_)
      + sizeof(CommunicationCommand_Markers::_impl_.park_enable_)
      - PROTOBUF_FIELD_OFFSET(CommunicationCommand_Markers, _impl_.ecu_send_on_)>(
          reinterpret_cast<char*>(&_impl_.ecu_send_on_),
          reinterpret_cast<char*>(&other->_impl_.ecu_send_on_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommunicationCommand_Markers::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_5fcommand_2eproto_getter, &descriptor_table_communication_5fcommand_2eproto_once,
      file_level_metadata_communication_5fcommand_2eproto[0]);
}

// ===================================================================

class CommunicationCommand_Command::_Internal {
 public:
  static const ::autonomous_proto::CommunicationCommand_Markers& markers(const CommunicationCommand_Command* msg);
};

const ::autonomous_proto::CommunicationCommand_Markers&
CommunicationCommand_Command::_Internal::markers(const CommunicationCommand_Command* msg) {
  return *msg->_impl_.markers_;
}
CommunicationCommand_Command::CommunicationCommand_Command(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.CommunicationCommand.Command)
}
CommunicationCommand_Command::CommunicationCommand_Command(const CommunicationCommand_Command& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommunicationCommand_Command* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.markers_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_markers()) {
    _this->_impl_.markers_ = new ::autonomous_proto::CommunicationCommand_Markers(*from._impl_.markers_);
  }
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.CommunicationCommand.Command)
}

inline void CommunicationCommand_Command::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.markers_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CommunicationCommand_Command::~CommunicationCommand_Command() {
  // @@protoc_insertion_point(destructor:autonomous_proto.CommunicationCommand.Command)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommunicationCommand_Command::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.markers_;
}

void CommunicationCommand_Command::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommunicationCommand_Command::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.CommunicationCommand.Command)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.markers_ != nullptr) {
    delete _impl_.markers_;
  }
  _impl_.markers_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommunicationCommand_Command::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .autonomous_proto.CommunicationCommand.Markers markers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_markers(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommunicationCommand_Command::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.CommunicationCommand.Command)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .autonomous_proto.CommunicationCommand.Markers markers = 1;
  if (this->_internal_has_markers()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::markers(this),
        _Internal::markers(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.CommunicationCommand.Command)
  return target;
}

size_t CommunicationCommand_Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.CommunicationCommand.Command)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .autonomous_proto.CommunicationCommand.Markers markers = 1;
  if (this->_internal_has_markers()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.markers_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommunicationCommand_Command::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommunicationCommand_Command::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommunicationCommand_Command::GetClassData() const { return &_class_data_; }


void CommunicationCommand_Command::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommunicationCommand_Command*>(&to_msg);
  auto& from = static_cast<const CommunicationCommand_Command&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.CommunicationCommand.Command)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_markers()) {
    _this->_internal_mutable_markers()->::autonomous_proto::CommunicationCommand_Markers::MergeFrom(
        from._internal_markers());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommunicationCommand_Command::CopyFrom(const CommunicationCommand_Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.CommunicationCommand.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommunicationCommand_Command::IsInitialized() const {
  return true;
}

void CommunicationCommand_Command::InternalSwap(CommunicationCommand_Command* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.markers_, other->_impl_.markers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommunicationCommand_Command::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_5fcommand_2eproto_getter, &descriptor_table_communication_5fcommand_2eproto_once,
      file_level_metadata_communication_5fcommand_2eproto[1]);
}

// ===================================================================

class CommunicationCommand_Response::_Internal {
 public:
  static const ::autonomous_proto::CommunicationCommand_Markers& markers(const CommunicationCommand_Response* msg);
};

const ::autonomous_proto::CommunicationCommand_Markers&
CommunicationCommand_Response::_Internal::markers(const CommunicationCommand_Response* msg) {
  return *msg->_impl_.markers_;
}
CommunicationCommand_Response::CommunicationCommand_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.CommunicationCommand.Response)
}
CommunicationCommand_Response::CommunicationCommand_Response(const CommunicationCommand_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommunicationCommand_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.markers_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_markers()) {
    _this->_impl_.markers_ = new ::autonomous_proto::CommunicationCommand_Markers(*from._impl_.markers_);
  }
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.CommunicationCommand.Response)
}

inline void CommunicationCommand_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.markers_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CommunicationCommand_Response::~CommunicationCommand_Response() {
  // @@protoc_insertion_point(destructor:autonomous_proto.CommunicationCommand.Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommunicationCommand_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.markers_;
}

void CommunicationCommand_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommunicationCommand_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.CommunicationCommand.Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.markers_ != nullptr) {
    delete _impl_.markers_;
  }
  _impl_.markers_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommunicationCommand_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .autonomous_proto.CommunicationCommand.Markers markers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_markers(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommunicationCommand_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.CommunicationCommand.Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .autonomous_proto.CommunicationCommand.Markers markers = 1;
  if (this->_internal_has_markers()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::markers(this),
        _Internal::markers(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.CommunicationCommand.Response)
  return target;
}

size_t CommunicationCommand_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.CommunicationCommand.Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .autonomous_proto.CommunicationCommand.Markers markers = 1;
  if (this->_internal_has_markers()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.markers_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommunicationCommand_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommunicationCommand_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommunicationCommand_Response::GetClassData() const { return &_class_data_; }


void CommunicationCommand_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommunicationCommand_Response*>(&to_msg);
  auto& from = static_cast<const CommunicationCommand_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.CommunicationCommand.Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_markers()) {
    _this->_internal_mutable_markers()->::autonomous_proto::CommunicationCommand_Markers::MergeFrom(
        from._internal_markers());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommunicationCommand_Response::CopyFrom(const CommunicationCommand_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.CommunicationCommand.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommunicationCommand_Response::IsInitialized() const {
  return true;
}

void CommunicationCommand_Response::InternalSwap(CommunicationCommand_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.markers_, other->_impl_.markers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommunicationCommand_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_5fcommand_2eproto_getter, &descriptor_table_communication_5fcommand_2eproto_once,
      file_level_metadata_communication_5fcommand_2eproto[2]);
}

// ===================================================================

class CommunicationCommand::_Internal {
 public:
  static const ::autonomous_proto::CommunicationCommand_Command& command(const CommunicationCommand* msg);
  static const ::autonomous_proto::CommunicationCommand_Response& response(const CommunicationCommand* msg);
};

const ::autonomous_proto::CommunicationCommand_Command&
CommunicationCommand::_Internal::command(const CommunicationCommand* msg) {
  return *msg->_impl_.command_;
}
const ::autonomous_proto::CommunicationCommand_Response&
CommunicationCommand::_Internal::response(const CommunicationCommand* msg) {
  return *msg->_impl_.response_;
}
CommunicationCommand::CommunicationCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:autonomous_proto.CommunicationCommand)
}
CommunicationCommand::CommunicationCommand(const CommunicationCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommunicationCommand* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.command_){nullptr}
    , decltype(_impl_.response_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_command()) {
    _this->_impl_.command_ = new ::autonomous_proto::CommunicationCommand_Command(*from._impl_.command_);
  }
  if (from._internal_has_response()) {
    _this->_impl_.response_ = new ::autonomous_proto::CommunicationCommand_Response(*from._impl_.response_);
  }
  // @@protoc_insertion_point(copy_constructor:autonomous_proto.CommunicationCommand)
}

inline void CommunicationCommand::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.command_){nullptr}
    , decltype(_impl_.response_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CommunicationCommand::~CommunicationCommand() {
  // @@protoc_insertion_point(destructor:autonomous_proto.CommunicationCommand)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommunicationCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.command_;
  if (this != internal_default_instance()) delete _impl_.response_;
}

void CommunicationCommand::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommunicationCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:autonomous_proto.CommunicationCommand)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.command_ != nullptr) {
    delete _impl_.command_;
  }
  _impl_.command_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.response_ != nullptr) {
    delete _impl_.response_;
  }
  _impl_.response_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommunicationCommand::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .autonomous_proto.CommunicationCommand.Command command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_command(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .autonomous_proto.CommunicationCommand.Response response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommunicationCommand::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:autonomous_proto.CommunicationCommand)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .autonomous_proto.CommunicationCommand.Command command = 1;
  if (this->_internal_has_command()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::command(this),
        _Internal::command(this).GetCachedSize(), target, stream);
  }

  // .autonomous_proto.CommunicationCommand.Response response = 2;
  if (this->_internal_has_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autonomous_proto.CommunicationCommand)
  return target;
}

size_t CommunicationCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autonomous_proto.CommunicationCommand)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .autonomous_proto.CommunicationCommand.Command command = 1;
  if (this->_internal_has_command()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.command_);
  }

  // .autonomous_proto.CommunicationCommand.Response response = 2;
  if (this->_internal_has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommunicationCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommunicationCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommunicationCommand::GetClassData() const { return &_class_data_; }


void CommunicationCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommunicationCommand*>(&to_msg);
  auto& from = static_cast<const CommunicationCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:autonomous_proto.CommunicationCommand)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_command()) {
    _this->_internal_mutable_command()->::autonomous_proto::CommunicationCommand_Command::MergeFrom(
        from._internal_command());
  }
  if (from._internal_has_response()) {
    _this->_internal_mutable_response()->::autonomous_proto::CommunicationCommand_Response::MergeFrom(
        from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommunicationCommand::CopyFrom(const CommunicationCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autonomous_proto.CommunicationCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommunicationCommand::IsInitialized() const {
  return true;
}

void CommunicationCommand::InternalSwap(CommunicationCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommunicationCommand, _impl_.response_)
      + sizeof(CommunicationCommand::_impl_.response_)
      - PROTOBUF_FIELD_OFFSET(CommunicationCommand, _impl_.command_)>(
          reinterpret_cast<char*>(&_impl_.command_),
          reinterpret_cast<char*>(&other->_impl_.command_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommunicationCommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_communication_5fcommand_2eproto_getter, &descriptor_table_communication_5fcommand_2eproto_once,
      file_level_metadata_communication_5fcommand_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace autonomous_proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::autonomous_proto::CommunicationCommand_Markers*
Arena::CreateMaybeMessage< ::autonomous_proto::CommunicationCommand_Markers >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::CommunicationCommand_Markers >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::CommunicationCommand_Command*
Arena::CreateMaybeMessage< ::autonomous_proto::CommunicationCommand_Command >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::CommunicationCommand_Command >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::CommunicationCommand_Response*
Arena::CreateMaybeMessage< ::autonomous_proto::CommunicationCommand_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::CommunicationCommand_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::autonomous_proto::CommunicationCommand*
Arena::CreateMaybeMessage< ::autonomous_proto::CommunicationCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::autonomous_proto::CommunicationCommand >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
