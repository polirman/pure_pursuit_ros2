// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_info.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_message_5finfo_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_message_5finfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_message_5finfo_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_message_5finfo_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_5finfo_2eproto;
namespace autonomous_proto {
class MessageInfo;
struct MessageInfoDefaultTypeInternal;
extern MessageInfoDefaultTypeInternal _MessageInfo_default_instance_;
class MessageInfo_ModuleName;
struct MessageInfo_ModuleNameDefaultTypeInternal;
extern MessageInfo_ModuleNameDefaultTypeInternal _MessageInfo_ModuleName_default_instance_;
class MessageInfo_Source;
struct MessageInfo_SourceDefaultTypeInternal;
extern MessageInfo_SourceDefaultTypeInternal _MessageInfo_Source_default_instance_;
class MessageInfo_TopicName;
struct MessageInfo_TopicNameDefaultTypeInternal;
extern MessageInfo_TopicNameDefaultTypeInternal _MessageInfo_TopicName_default_instance_;
}  // namespace autonomous_proto
PROTOBUF_NAMESPACE_OPEN
template<> ::autonomous_proto::MessageInfo* Arena::CreateMaybeMessage<::autonomous_proto::MessageInfo>(Arena*);
template<> ::autonomous_proto::MessageInfo_ModuleName* Arena::CreateMaybeMessage<::autonomous_proto::MessageInfo_ModuleName>(Arena*);
template<> ::autonomous_proto::MessageInfo_Source* Arena::CreateMaybeMessage<::autonomous_proto::MessageInfo_Source>(Arena*);
template<> ::autonomous_proto::MessageInfo_TopicName* Arena::CreateMaybeMessage<::autonomous_proto::MessageInfo_TopicName>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace autonomous_proto {

enum MessageInfo_ModuleName_Value : int {
  MessageInfo_ModuleName_Value_unknown = 0,
  MessageInfo_ModuleName_Value_msg_converter = 512,
  MessageInfo_ModuleName_Value_communication_utilities = 1024,
  MessageInfo_ModuleName_Value_copycat = 11000,
  MessageInfo_ModuleName_Value_local_roadnet = 12000,
  MessageInfo_ModuleName_Value_motion_control = 12288,
  MessageInfo_ModuleName_Value_undefined = -1,
  MessageInfo_ModuleName_Value_MessageInfo_ModuleName_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MessageInfo_ModuleName_Value_MessageInfo_ModuleName_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MessageInfo_ModuleName_Value_IsValid(int value);
constexpr MessageInfo_ModuleName_Value MessageInfo_ModuleName_Value_Value_MIN = MessageInfo_ModuleName_Value_undefined;
constexpr MessageInfo_ModuleName_Value MessageInfo_ModuleName_Value_Value_MAX = MessageInfo_ModuleName_Value_motion_control;
constexpr int MessageInfo_ModuleName_Value_Value_ARRAYSIZE = MessageInfo_ModuleName_Value_Value_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageInfo_ModuleName_Value_descriptor();
template<typename T>
inline const std::string& MessageInfo_ModuleName_Value_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessageInfo_ModuleName_Value>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessageInfo_ModuleName_Value_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessageInfo_ModuleName_Value_descriptor(), enum_t_value);
}
inline bool MessageInfo_ModuleName_Value_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MessageInfo_ModuleName_Value* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessageInfo_ModuleName_Value>(
    MessageInfo_ModuleName_Value_descriptor(), name, value);
}
enum MessageInfo_TopicName_Value : int {
  MessageInfo_TopicName_Value_unknown = 0,
  MessageInfo_TopicName_Value_vehicle_state = 1024,
  MessageInfo_TopicName_Value_navigation = 2048,
  MessageInfo_TopicName_Value_local_path = 10240,
  MessageInfo_TopicName_Value_copycat_path = 11000,
  MessageInfo_TopicName_Value_control = 12288,
  MessageInfo_TopicName_Value_control_limits = 12289,
  MessageInfo_TopicName_Value_control_sphere = 12290,
  MessageInfo_TopicName_Value_undefined = -1,
  MessageInfo_TopicName_Value_MessageInfo_TopicName_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MessageInfo_TopicName_Value_MessageInfo_TopicName_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MessageInfo_TopicName_Value_IsValid(int value);
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName_Value_Value_MIN = MessageInfo_TopicName_Value_undefined;
constexpr MessageInfo_TopicName_Value MessageInfo_TopicName_Value_Value_MAX = MessageInfo_TopicName_Value_control_sphere;
constexpr int MessageInfo_TopicName_Value_Value_ARRAYSIZE = MessageInfo_TopicName_Value_Value_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageInfo_TopicName_Value_descriptor();
template<typename T>
inline const std::string& MessageInfo_TopicName_Value_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessageInfo_TopicName_Value>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessageInfo_TopicName_Value_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessageInfo_TopicName_Value_descriptor(), enum_t_value);
}
inline bool MessageInfo_TopicName_Value_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MessageInfo_TopicName_Value* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessageInfo_TopicName_Value>(
    MessageInfo_TopicName_Value_descriptor(), name, value);
}
// ===================================================================

class MessageInfo_ModuleName final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:autonomous_proto.MessageInfo.ModuleName) */ {
 public:
  inline MessageInfo_ModuleName() : MessageInfo_ModuleName(nullptr) {}
  explicit PROTOBUF_CONSTEXPR MessageInfo_ModuleName(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageInfo_ModuleName(const MessageInfo_ModuleName& from);
  MessageInfo_ModuleName(MessageInfo_ModuleName&& from) noexcept
    : MessageInfo_ModuleName() {
    *this = ::std::move(from);
  }

  inline MessageInfo_ModuleName& operator=(const MessageInfo_ModuleName& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageInfo_ModuleName& operator=(MessageInfo_ModuleName&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageInfo_ModuleName& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageInfo_ModuleName* internal_default_instance() {
    return reinterpret_cast<const MessageInfo_ModuleName*>(
               &_MessageInfo_ModuleName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MessageInfo_ModuleName& a, MessageInfo_ModuleName& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageInfo_ModuleName* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageInfo_ModuleName* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageInfo_ModuleName* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageInfo_ModuleName>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MessageInfo_ModuleName& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MessageInfo_ModuleName& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autonomous_proto.MessageInfo.ModuleName";
  }
  protected:
  explicit MessageInfo_ModuleName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MessageInfo_ModuleName_Value Value;
  static constexpr Value unknown =
    MessageInfo_ModuleName_Value_unknown;
  static constexpr Value msg_converter =
    MessageInfo_ModuleName_Value_msg_converter;
  static constexpr Value communication_utilities =
    MessageInfo_ModuleName_Value_communication_utilities;
  static constexpr Value copycat =
    MessageInfo_ModuleName_Value_copycat;
  static constexpr Value local_roadnet =
    MessageInfo_ModuleName_Value_local_roadnet;
  static constexpr Value motion_control =
    MessageInfo_ModuleName_Value_motion_control;
  static constexpr Value undefined =
    MessageInfo_ModuleName_Value_undefined;
  static inline bool Value_IsValid(int value) {
    return MessageInfo_ModuleName_Value_IsValid(value);
  }
  static constexpr Value Value_MIN =
    MessageInfo_ModuleName_Value_Value_MIN;
  static constexpr Value Value_MAX =
    MessageInfo_ModuleName_Value_Value_MAX;
  static constexpr int Value_ARRAYSIZE =
    MessageInfo_ModuleName_Value_Value_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Value_descriptor() {
    return MessageInfo_ModuleName_Value_descriptor();
  }
  template<typename T>
  static inline const std::string& Value_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Value>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Value_Name.");
    return MessageInfo_ModuleName_Value_Name(enum_t_value);
  }
  static inline bool Value_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Value* value) {
    return MessageInfo_ModuleName_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:autonomous_proto.MessageInfo.ModuleName)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_message_5finfo_2eproto;
};
// -------------------------------------------------------------------

class MessageInfo_TopicName final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:autonomous_proto.MessageInfo.TopicName) */ {
 public:
  inline MessageInfo_TopicName() : MessageInfo_TopicName(nullptr) {}
  explicit PROTOBUF_CONSTEXPR MessageInfo_TopicName(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageInfo_TopicName(const MessageInfo_TopicName& from);
  MessageInfo_TopicName(MessageInfo_TopicName&& from) noexcept
    : MessageInfo_TopicName() {
    *this = ::std::move(from);
  }

  inline MessageInfo_TopicName& operator=(const MessageInfo_TopicName& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageInfo_TopicName& operator=(MessageInfo_TopicName&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageInfo_TopicName& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageInfo_TopicName* internal_default_instance() {
    return reinterpret_cast<const MessageInfo_TopicName*>(
               &_MessageInfo_TopicName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MessageInfo_TopicName& a, MessageInfo_TopicName& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageInfo_TopicName* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageInfo_TopicName* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageInfo_TopicName* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageInfo_TopicName>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MessageInfo_TopicName& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MessageInfo_TopicName& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autonomous_proto.MessageInfo.TopicName";
  }
  protected:
  explicit MessageInfo_TopicName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MessageInfo_TopicName_Value Value;
  static constexpr Value unknown =
    MessageInfo_TopicName_Value_unknown;
  static constexpr Value vehicle_state =
    MessageInfo_TopicName_Value_vehicle_state;
  static constexpr Value navigation =
    MessageInfo_TopicName_Value_navigation;
  static constexpr Value local_path =
    MessageInfo_TopicName_Value_local_path;
  static constexpr Value copycat_path =
    MessageInfo_TopicName_Value_copycat_path;
  static constexpr Value control =
    MessageInfo_TopicName_Value_control;
  static constexpr Value control_limits =
    MessageInfo_TopicName_Value_control_limits;
  static constexpr Value control_sphere =
    MessageInfo_TopicName_Value_control_sphere;
  static constexpr Value undefined =
    MessageInfo_TopicName_Value_undefined;
  static inline bool Value_IsValid(int value) {
    return MessageInfo_TopicName_Value_IsValid(value);
  }
  static constexpr Value Value_MIN =
    MessageInfo_TopicName_Value_Value_MIN;
  static constexpr Value Value_MAX =
    MessageInfo_TopicName_Value_Value_MAX;
  static constexpr int Value_ARRAYSIZE =
    MessageInfo_TopicName_Value_Value_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Value_descriptor() {
    return MessageInfo_TopicName_Value_descriptor();
  }
  template<typename T>
  static inline const std::string& Value_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Value>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Value_Name.");
    return MessageInfo_TopicName_Value_Name(enum_t_value);
  }
  static inline bool Value_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Value* value) {
    return MessageInfo_TopicName_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:autonomous_proto.MessageInfo.TopicName)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_message_5finfo_2eproto;
};
// -------------------------------------------------------------------

class MessageInfo_Source final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autonomous_proto.MessageInfo.Source) */ {
 public:
  inline MessageInfo_Source() : MessageInfo_Source(nullptr) {}
  ~MessageInfo_Source() override;
  explicit PROTOBUF_CONSTEXPR MessageInfo_Source(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageInfo_Source(const MessageInfo_Source& from);
  MessageInfo_Source(MessageInfo_Source&& from) noexcept
    : MessageInfo_Source() {
    *this = ::std::move(from);
  }

  inline MessageInfo_Source& operator=(const MessageInfo_Source& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageInfo_Source& operator=(MessageInfo_Source&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageInfo_Source& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageInfo_Source* internal_default_instance() {
    return reinterpret_cast<const MessageInfo_Source*>(
               &_MessageInfo_Source_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MessageInfo_Source& a, MessageInfo_Source& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageInfo_Source* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageInfo_Source* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageInfo_Source* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageInfo_Source>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageInfo_Source& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageInfo_Source& from) {
    MessageInfo_Source::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageInfo_Source* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autonomous_proto.MessageInfo.Source";
  }
  protected:
  explicit MessageInfo_Source(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountFieldNumber = 3,
    kTimestampFieldNumber = 4,
    kTimeGetFieldNumber = 5,
    kModuleNameFieldNumber = 1,
    kTopicNameFieldNumber = 2,
  };
  // .google.protobuf.Int64Value count = 3;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& count() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_count();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_count();
  void set_allocated_count(::PROTOBUF_NAMESPACE_ID::Int64Value* count);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_count() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_count();
  public:
  void unsafe_arena_set_allocated_count(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* count);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_count();

  // .google.protobuf.Int64Value timestamp = 4;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& timestamp() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_timestamp();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_timestamp();
  void set_allocated_timestamp(::PROTOBUF_NAMESPACE_ID::Int64Value* timestamp);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_timestamp() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_timestamp();
  public:
  void unsafe_arena_set_allocated_timestamp(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* timestamp);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_timestamp();

  // .google.protobuf.Int64Value time_get = 5;
  bool has_time_get() const;
  private:
  bool _internal_has_time_get() const;
  public:
  void clear_time_get();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& time_get() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_time_get();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_time_get();
  void set_allocated_time_get(::PROTOBUF_NAMESPACE_ID::Int64Value* time_get);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_time_get() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_time_get();
  public:
  void unsafe_arena_set_allocated_time_get(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* time_get);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_time_get();

  // .autonomous_proto.MessageInfo.ModuleName.Value module_name = 1;
  void clear_module_name();
  ::autonomous_proto::MessageInfo_ModuleName_Value module_name() const;
  void set_module_name(::autonomous_proto::MessageInfo_ModuleName_Value value);
  private:
  ::autonomous_proto::MessageInfo_ModuleName_Value _internal_module_name() const;
  void _internal_set_module_name(::autonomous_proto::MessageInfo_ModuleName_Value value);
  public:

  // .autonomous_proto.MessageInfo.TopicName.Value topic_name = 2;
  void clear_topic_name();
  ::autonomous_proto::MessageInfo_TopicName_Value topic_name() const;
  void set_topic_name(::autonomous_proto::MessageInfo_TopicName_Value value);
  private:
  ::autonomous_proto::MessageInfo_TopicName_Value _internal_topic_name() const;
  void _internal_set_topic_name(::autonomous_proto::MessageInfo_TopicName_Value value);
  public:

  // @@protoc_insertion_point(class_scope:autonomous_proto.MessageInfo.Source)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::Int64Value* count_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* timestamp_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* time_get_;
    int module_name_;
    int topic_name_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_5finfo_2eproto;
};
// -------------------------------------------------------------------

class MessageInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autonomous_proto.MessageInfo) */ {
 public:
  inline MessageInfo() : MessageInfo(nullptr) {}
  ~MessageInfo() override;
  explicit PROTOBUF_CONSTEXPR MessageInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageInfo(const MessageInfo& from);
  MessageInfo(MessageInfo&& from) noexcept
    : MessageInfo() {
    *this = ::std::move(from);
  }

  inline MessageInfo& operator=(const MessageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageInfo& operator=(MessageInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageInfo* internal_default_instance() {
    return reinterpret_cast<const MessageInfo*>(
               &_MessageInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MessageInfo& a, MessageInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageInfo& from) {
    MessageInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autonomous_proto.MessageInfo";
  }
  protected:
  explicit MessageInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MessageInfo_ModuleName ModuleName;
  typedef MessageInfo_TopicName TopicName;
  typedef MessageInfo_Source Source;

  // accessors -------------------------------------------------------

  enum : int {
    kSourcesFieldNumber = 1,
    kCountFieldNumber = 4,
    kTimestampFieldNumber = 5,
    kModuleNameFieldNumber = 2,
    kTopicNameFieldNumber = 3,
  };
  // repeated .autonomous_proto.MessageInfo.Source sources = 1;
  int sources_size() const;
  private:
  int _internal_sources_size() const;
  public:
  void clear_sources();
  ::autonomous_proto::MessageInfo_Source* mutable_sources(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autonomous_proto::MessageInfo_Source >*
      mutable_sources();
  private:
  const ::autonomous_proto::MessageInfo_Source& _internal_sources(int index) const;
  ::autonomous_proto::MessageInfo_Source* _internal_add_sources();
  public:
  const ::autonomous_proto::MessageInfo_Source& sources(int index) const;
  ::autonomous_proto::MessageInfo_Source* add_sources();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autonomous_proto::MessageInfo_Source >&
      sources() const;

  // .google.protobuf.Int64Value count = 4;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& count() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_count();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_count();
  void set_allocated_count(::PROTOBUF_NAMESPACE_ID::Int64Value* count);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_count() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_count();
  public:
  void unsafe_arena_set_allocated_count(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* count);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_count();

  // .google.protobuf.Int64Value timestamp = 5;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& timestamp() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_timestamp();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_timestamp();
  void set_allocated_timestamp(::PROTOBUF_NAMESPACE_ID::Int64Value* timestamp);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_timestamp() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_timestamp();
  public:
  void unsafe_arena_set_allocated_timestamp(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* timestamp);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_timestamp();

  // .autonomous_proto.MessageInfo.ModuleName.Value module_name = 2;
  void clear_module_name();
  ::autonomous_proto::MessageInfo_ModuleName_Value module_name() const;
  void set_module_name(::autonomous_proto::MessageInfo_ModuleName_Value value);
  private:
  ::autonomous_proto::MessageInfo_ModuleName_Value _internal_module_name() const;
  void _internal_set_module_name(::autonomous_proto::MessageInfo_ModuleName_Value value);
  public:

  // .autonomous_proto.MessageInfo.TopicName.Value topic_name = 3;
  void clear_topic_name();
  ::autonomous_proto::MessageInfo_TopicName_Value topic_name() const;
  void set_topic_name(::autonomous_proto::MessageInfo_TopicName_Value value);
  private:
  ::autonomous_proto::MessageInfo_TopicName_Value _internal_topic_name() const;
  void _internal_set_topic_name(::autonomous_proto::MessageInfo_TopicName_Value value);
  public:

  // @@protoc_insertion_point(class_scope:autonomous_proto.MessageInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autonomous_proto::MessageInfo_Source > sources_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* count_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* timestamp_;
    int module_name_;
    int topic_name_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_5finfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageInfo_ModuleName

// -------------------------------------------------------------------

// MessageInfo_TopicName

// -------------------------------------------------------------------

// MessageInfo_Source

// .autonomous_proto.MessageInfo.ModuleName.Value module_name = 1;
inline void MessageInfo_Source::clear_module_name() {
  _impl_.module_name_ = 0;
}
inline ::autonomous_proto::MessageInfo_ModuleName_Value MessageInfo_Source::_internal_module_name() const {
  return static_cast< ::autonomous_proto::MessageInfo_ModuleName_Value >(_impl_.module_name_);
}
inline ::autonomous_proto::MessageInfo_ModuleName_Value MessageInfo_Source::module_name() const {
  // @@protoc_insertion_point(field_get:autonomous_proto.MessageInfo.Source.module_name)
  return _internal_module_name();
}
inline void MessageInfo_Source::_internal_set_module_name(::autonomous_proto::MessageInfo_ModuleName_Value value) {
  
  _impl_.module_name_ = value;
}
inline void MessageInfo_Source::set_module_name(::autonomous_proto::MessageInfo_ModuleName_Value value) {
  _internal_set_module_name(value);
  // @@protoc_insertion_point(field_set:autonomous_proto.MessageInfo.Source.module_name)
}

// .autonomous_proto.MessageInfo.TopicName.Value topic_name = 2;
inline void MessageInfo_Source::clear_topic_name() {
  _impl_.topic_name_ = 0;
}
inline ::autonomous_proto::MessageInfo_TopicName_Value MessageInfo_Source::_internal_topic_name() const {
  return static_cast< ::autonomous_proto::MessageInfo_TopicName_Value >(_impl_.topic_name_);
}
inline ::autonomous_proto::MessageInfo_TopicName_Value MessageInfo_Source::topic_name() const {
  // @@protoc_insertion_point(field_get:autonomous_proto.MessageInfo.Source.topic_name)
  return _internal_topic_name();
}
inline void MessageInfo_Source::_internal_set_topic_name(::autonomous_proto::MessageInfo_TopicName_Value value) {
  
  _impl_.topic_name_ = value;
}
inline void MessageInfo_Source::set_topic_name(::autonomous_proto::MessageInfo_TopicName_Value value) {
  _internal_set_topic_name(value);
  // @@protoc_insertion_point(field_set:autonomous_proto.MessageInfo.Source.topic_name)
}

// .google.protobuf.Int64Value count = 3;
inline bool MessageInfo_Source::_internal_has_count() const {
  return this != internal_default_instance() && _impl_.count_ != nullptr;
}
inline bool MessageInfo_Source::has_count() const {
  return _internal_has_count();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& MessageInfo_Source::_internal_count() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.count_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& MessageInfo_Source::count() const {
  // @@protoc_insertion_point(field_get:autonomous_proto.MessageInfo.Source.count)
  return _internal_count();
}
inline void MessageInfo_Source::unsafe_arena_set_allocated_count(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* count) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.count_);
  }
  _impl_.count_ = count;
  if (count) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:autonomous_proto.MessageInfo.Source.count)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::release_count() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.count_;
  _impl_.count_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::unsafe_arena_release_count() {
  // @@protoc_insertion_point(field_release:autonomous_proto.MessageInfo.Source.count)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.count_;
  _impl_.count_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::_internal_mutable_count() {
  
  if (_impl_.count_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.count_ = p;
  }
  return _impl_.count_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::mutable_count() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_count();
  // @@protoc_insertion_point(field_mutable:autonomous_proto.MessageInfo.Source.count)
  return _msg;
}
inline void MessageInfo_Source::set_allocated_count(::PROTOBUF_NAMESPACE_ID::Int64Value* count) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.count_);
  }
  if (count) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(count));
    if (message_arena != submessage_arena) {
      count = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.count_ = count;
  // @@protoc_insertion_point(field_set_allocated:autonomous_proto.MessageInfo.Source.count)
}

// .google.protobuf.Int64Value timestamp = 4;
inline bool MessageInfo_Source::_internal_has_timestamp() const {
  return this != internal_default_instance() && _impl_.timestamp_ != nullptr;
}
inline bool MessageInfo_Source::has_timestamp() const {
  return _internal_has_timestamp();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& MessageInfo_Source::_internal_timestamp() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& MessageInfo_Source::timestamp() const {
  // @@protoc_insertion_point(field_get:autonomous_proto.MessageInfo.Source.timestamp)
  return _internal_timestamp();
}
inline void MessageInfo_Source::unsafe_arena_set_allocated_timestamp(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* timestamp) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:autonomous_proto.MessageInfo.Source.timestamp)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::release_timestamp() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::unsafe_arena_release_timestamp() {
  // @@protoc_insertion_point(field_release:autonomous_proto.MessageInfo.Source.timestamp)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::_internal_mutable_timestamp() {
  
  if (_impl_.timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.timestamp_ = p;
  }
  return _impl_.timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::mutable_timestamp() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:autonomous_proto.MessageInfo.Source.timestamp)
  return _msg;
}
inline void MessageInfo_Source::set_allocated_timestamp(::PROTOBUF_NAMESPACE_ID::Int64Value* timestamp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.timestamp_);
  }
  if (timestamp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp));
    if (message_arena != submessage_arena) {
      timestamp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:autonomous_proto.MessageInfo.Source.timestamp)
}

// .google.protobuf.Int64Value time_get = 5;
inline bool MessageInfo_Source::_internal_has_time_get() const {
  return this != internal_default_instance() && _impl_.time_get_ != nullptr;
}
inline bool MessageInfo_Source::has_time_get() const {
  return _internal_has_time_get();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& MessageInfo_Source::_internal_time_get() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.time_get_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& MessageInfo_Source::time_get() const {
  // @@protoc_insertion_point(field_get:autonomous_proto.MessageInfo.Source.time_get)
  return _internal_time_get();
}
inline void MessageInfo_Source::unsafe_arena_set_allocated_time_get(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* time_get) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.time_get_);
  }
  _impl_.time_get_ = time_get;
  if (time_get) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:autonomous_proto.MessageInfo.Source.time_get)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::release_time_get() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.time_get_;
  _impl_.time_get_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::unsafe_arena_release_time_get() {
  // @@protoc_insertion_point(field_release:autonomous_proto.MessageInfo.Source.time_get)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.time_get_;
  _impl_.time_get_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::_internal_mutable_time_get() {
  
  if (_impl_.time_get_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.time_get_ = p;
  }
  return _impl_.time_get_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo_Source::mutable_time_get() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_time_get();
  // @@protoc_insertion_point(field_mutable:autonomous_proto.MessageInfo.Source.time_get)
  return _msg;
}
inline void MessageInfo_Source::set_allocated_time_get(::PROTOBUF_NAMESPACE_ID::Int64Value* time_get) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.time_get_);
  }
  if (time_get) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_get));
    if (message_arena != submessage_arena) {
      time_get = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time_get, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.time_get_ = time_get;
  // @@protoc_insertion_point(field_set_allocated:autonomous_proto.MessageInfo.Source.time_get)
}

// -------------------------------------------------------------------

// MessageInfo

// repeated .autonomous_proto.MessageInfo.Source sources = 1;
inline int MessageInfo::_internal_sources_size() const {
  return _impl_.sources_.size();
}
inline int MessageInfo::sources_size() const {
  return _internal_sources_size();
}
inline void MessageInfo::clear_sources() {
  _impl_.sources_.Clear();
}
inline ::autonomous_proto::MessageInfo_Source* MessageInfo::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:autonomous_proto.MessageInfo.sources)
  return _impl_.sources_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autonomous_proto::MessageInfo_Source >*
MessageInfo::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:autonomous_proto.MessageInfo.sources)
  return &_impl_.sources_;
}
inline const ::autonomous_proto::MessageInfo_Source& MessageInfo::_internal_sources(int index) const {
  return _impl_.sources_.Get(index);
}
inline const ::autonomous_proto::MessageInfo_Source& MessageInfo::sources(int index) const {
  // @@protoc_insertion_point(field_get:autonomous_proto.MessageInfo.sources)
  return _internal_sources(index);
}
inline ::autonomous_proto::MessageInfo_Source* MessageInfo::_internal_add_sources() {
  return _impl_.sources_.Add();
}
inline ::autonomous_proto::MessageInfo_Source* MessageInfo::add_sources() {
  ::autonomous_proto::MessageInfo_Source* _add = _internal_add_sources();
  // @@protoc_insertion_point(field_add:autonomous_proto.MessageInfo.sources)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autonomous_proto::MessageInfo_Source >&
MessageInfo::sources() const {
  // @@protoc_insertion_point(field_list:autonomous_proto.MessageInfo.sources)
  return _impl_.sources_;
}

// .autonomous_proto.MessageInfo.ModuleName.Value module_name = 2;
inline void MessageInfo::clear_module_name() {
  _impl_.module_name_ = 0;
}
inline ::autonomous_proto::MessageInfo_ModuleName_Value MessageInfo::_internal_module_name() const {
  return static_cast< ::autonomous_proto::MessageInfo_ModuleName_Value >(_impl_.module_name_);
}
inline ::autonomous_proto::MessageInfo_ModuleName_Value MessageInfo::module_name() const {
  // @@protoc_insertion_point(field_get:autonomous_proto.MessageInfo.module_name)
  return _internal_module_name();
}
inline void MessageInfo::_internal_set_module_name(::autonomous_proto::MessageInfo_ModuleName_Value value) {
  
  _impl_.module_name_ = value;
}
inline void MessageInfo::set_module_name(::autonomous_proto::MessageInfo_ModuleName_Value value) {
  _internal_set_module_name(value);
  // @@protoc_insertion_point(field_set:autonomous_proto.MessageInfo.module_name)
}

// .autonomous_proto.MessageInfo.TopicName.Value topic_name = 3;
inline void MessageInfo::clear_topic_name() {
  _impl_.topic_name_ = 0;
}
inline ::autonomous_proto::MessageInfo_TopicName_Value MessageInfo::_internal_topic_name() const {
  return static_cast< ::autonomous_proto::MessageInfo_TopicName_Value >(_impl_.topic_name_);
}
inline ::autonomous_proto::MessageInfo_TopicName_Value MessageInfo::topic_name() const {
  // @@protoc_insertion_point(field_get:autonomous_proto.MessageInfo.topic_name)
  return _internal_topic_name();
}
inline void MessageInfo::_internal_set_topic_name(::autonomous_proto::MessageInfo_TopicName_Value value) {
  
  _impl_.topic_name_ = value;
}
inline void MessageInfo::set_topic_name(::autonomous_proto::MessageInfo_TopicName_Value value) {
  _internal_set_topic_name(value);
  // @@protoc_insertion_point(field_set:autonomous_proto.MessageInfo.topic_name)
}

// .google.protobuf.Int64Value count = 4;
inline bool MessageInfo::_internal_has_count() const {
  return this != internal_default_instance() && _impl_.count_ != nullptr;
}
inline bool MessageInfo::has_count() const {
  return _internal_has_count();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& MessageInfo::_internal_count() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.count_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& MessageInfo::count() const {
  // @@protoc_insertion_point(field_get:autonomous_proto.MessageInfo.count)
  return _internal_count();
}
inline void MessageInfo::unsafe_arena_set_allocated_count(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* count) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.count_);
  }
  _impl_.count_ = count;
  if (count) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:autonomous_proto.MessageInfo.count)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo::release_count() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.count_;
  _impl_.count_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo::unsafe_arena_release_count() {
  // @@protoc_insertion_point(field_release:autonomous_proto.MessageInfo.count)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.count_;
  _impl_.count_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo::_internal_mutable_count() {
  
  if (_impl_.count_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.count_ = p;
  }
  return _impl_.count_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo::mutable_count() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_count();
  // @@protoc_insertion_point(field_mutable:autonomous_proto.MessageInfo.count)
  return _msg;
}
inline void MessageInfo::set_allocated_count(::PROTOBUF_NAMESPACE_ID::Int64Value* count) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.count_);
  }
  if (count) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(count));
    if (message_arena != submessage_arena) {
      count = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.count_ = count;
  // @@protoc_insertion_point(field_set_allocated:autonomous_proto.MessageInfo.count)
}

// .google.protobuf.Int64Value timestamp = 5;
inline bool MessageInfo::_internal_has_timestamp() const {
  return this != internal_default_instance() && _impl_.timestamp_ != nullptr;
}
inline bool MessageInfo::has_timestamp() const {
  return _internal_has_timestamp();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& MessageInfo::_internal_timestamp() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& MessageInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:autonomous_proto.MessageInfo.timestamp)
  return _internal_timestamp();
}
inline void MessageInfo::unsafe_arena_set_allocated_timestamp(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* timestamp) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:autonomous_proto.MessageInfo.timestamp)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo::release_timestamp() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo::unsafe_arena_release_timestamp() {
  // @@protoc_insertion_point(field_release:autonomous_proto.MessageInfo.timestamp)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo::_internal_mutable_timestamp() {
  
  if (_impl_.timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.timestamp_ = p;
  }
  return _impl_.timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* MessageInfo::mutable_timestamp() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:autonomous_proto.MessageInfo.timestamp)
  return _msg;
}
inline void MessageInfo::set_allocated_timestamp(::PROTOBUF_NAMESPACE_ID::Int64Value* timestamp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.timestamp_);
  }
  if (timestamp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp));
    if (message_arena != submessage_arena) {
      timestamp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:autonomous_proto.MessageInfo.timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace autonomous_proto

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::autonomous_proto::MessageInfo_ModuleName_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autonomous_proto::MessageInfo_ModuleName_Value>() {
  return ::autonomous_proto::MessageInfo_ModuleName_Value_descriptor();
}
template <> struct is_proto_enum< ::autonomous_proto::MessageInfo_TopicName_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autonomous_proto::MessageInfo_TopicName_Value>() {
  return ::autonomous_proto::MessageInfo_TopicName_Value_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_message_5finfo_2eproto
